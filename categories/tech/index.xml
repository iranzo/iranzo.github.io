<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tech on Pablo Iranzo Gómez blog</title>
    <link>https://iranzo.io/categories/tech/</link>
    <description>Recent content in Tech on Pablo Iranzo Gómez blog</description>
    <image>
      <title>Pablo Iranzo Gómez blog</title>
      <url>https://iranzo.io/mugshot.png</url>
      <link>https://iranzo.io/mugshot.png</link>
    </image>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Feb 2025 09:33:58 +0000</lastBuildDate>
    <atom:link href="https://iranzo.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install gems on local user folder instead of system wide</title>
      <link>https://iranzo.io/tips/bundle-localuser/</link>
      <pubDate>Tue, 16 Jan 2024 16:27:50 +0000</pubDate>
      <guid>https://iranzo.io/tips/bundle-localuser/</guid>
      <description>&lt;p&gt;In order to test locally a Gemfile, define local path for the gems to avoid attempting to write to system-wide folders:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bundle config set --local path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/username/.gem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bundle install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>OpenShift Layered Images for patching</title>
      <link>https://iranzo.io/blog/2023/11/08/openshift-layered-images-for-patching/</link>
      <pubDate>Wed, 08 Nov 2023 00:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2023/11/08/openshift-layered-images-for-patching/</guid>
      <description>&lt;p&gt;With recent releases of OpenShift like 4.13 you can use &lt;a href=&#34;https://access.redhat.com/documentation/es-es/openshift_container_platform/4.13/html/post-installation_configuration/coreos-layering&#34;&gt;CoreOS Layering&lt;/a&gt; to apply custom images to the nodes.&lt;/p&gt;
&lt;p&gt;The feature allows to build, via a &lt;code&gt;Dockerfile&lt;/code&gt; a custom image that can later be applied to our nodes.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s review the steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First we need to find the base image being used in our environment with &lt;code&gt;oc adm release info quay.io/openshift-release-dev/ocp-release:4.13.5-aarch64 --image-for=rhel-coreos&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then we use the returned value in the &lt;code&gt;FROM&lt;/code&gt; line in our Dockerfile&lt;/li&gt;
&lt;li&gt;If we want to add custom packages, we should have a server which is reachable and run &lt;code&gt;createrepo&lt;/code&gt; on the folder containing the rpm&amp;rsquo;s so that &lt;code&gt;rpm-ostree&lt;/code&gt; can download them for installation.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example dockerfile:&lt;/p&gt;</description>
    </item>
    <item>
      <title>mydlink Website from Linux</title>
      <link>https://iranzo.io/blog/2023/11/05/mydlink-website-from-linux/</link>
      <pubDate>Sun, 05 Nov 2023 00:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2023/11/05/mydlink-website-from-linux/</guid>
      <description>&lt;p&gt;Hi had the chance to buy a Dlink camera, waterproof, with magnetic base and rated for exteriors for a really great price a while ago &lt;a href=&#34;https://www.amazon.es/dp/B07KTT14BH?tag=redken-21&#34;&gt;D-Link DCS 8600LH 🛒#ad&lt;/a&gt; and later a camera with pan and tilt from Dlink too &lt;a href=&#34;https://www.amazon.es/dp/B08VNL3NHL?tag=redken-21&#34;&gt;D-Link DCS-6500LH 🛒#ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The camera, of course has an application for configuration, viewing the image, etc named &amp;lsquo;mydlink&amp;rsquo; which has a web counterpart at &lt;a href=&#34;https://mydlink.com/&#34;&gt;https://mydlink.com/&lt;/a&gt;, but unfortunately, when you try to access the website, there&amp;rsquo;s little you can do:&lt;/p&gt;</description>
    </item>
    <item>
      <title>No matching key found</title>
      <link>https://iranzo.io/tips/no-matching-key-found/</link>
      <pubDate>Fri, 25 Aug 2023 09:42:48 +0000</pubDate>
      <guid>https://iranzo.io/tips/no-matching-key-found/</guid>
      <description>&lt;p&gt;As you might have experienced&amp;hellip; using a recent system to connect to a legacy one could be complicated as some insecure protocols have been disabled, with a message like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unable to negotiate with 192.168.2.82 port 22: no matching host key type found. Their offer: ssh-rsa,ssh-dss
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create an entry like this in your &lt;code&gt;.ssh/config&lt;/code&gt; file, so that insecure methods can be used to connect to a specific host:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host 192.168.2.82
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	HostKeyAlgorithms=+ssh-rsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	KexAlgorithms=+diffie-hellman-group1-sha1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  PubkeyAcceptedKeyTypes=+ssh-rsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	User root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or alternatively on the command line:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrade Debian from buster to bullseye</title>
      <link>https://iranzo.io/tips/raspbian-upgrade/</link>
      <pubDate>Sat, 22 Jul 2023 13:22:08 +0000</pubDate>
      <guid>https://iranzo.io/tips/raspbian-upgrade/</guid>
      <description>&lt;p&gt;I had two Raspberry Pi systems running Raspbian and they were failing to find updates for newer packages.&lt;/p&gt;
&lt;p&gt;As Debian &lt;code&gt;stable&lt;/code&gt; was upgraded too, moving from &lt;code&gt;buster&lt;/code&gt; to &lt;code&gt;bullseye&lt;/code&gt; the packages failed to get the newer ones.&lt;/p&gt;
&lt;div class=&#34;admonition warning&#34;&gt;
    &lt;p class=&#34;admonition-title&#34;&gt;Warning&lt;/p&gt;
    &lt;p class=&#34;admonition&#34;&gt;Beware as this procedure might upgrade the system but might no render a bootable Raspberry Pi&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;A way to fix it is, to first, change references, if any, to the old codename version by running:&lt;/p&gt;</description>
    </item>
    <item>
      <title>KMM 1.1 Scale testing</title>
      <link>https://iranzo.io/blog/2023/06/21/kmm-1.1-scale-testing/</link>
      <pubDate>Wed, 21 Jun 2023 00:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2023/06/21/kmm-1.1-scale-testing/</guid>
      <description>&lt;div class=&#34;admonition attention&#34;&gt;
    &lt;p class=&#34;admonition-title&#34;&gt;Attention&lt;/p&gt;
    &lt;p class=&#34;admonition&#34;&gt;First published at &lt;a href=&#34;https://cloud.redhat.com/blog/scale-testing-kernel-module-management&#34;&gt;https://cloud.redhat.com/blog/scale-testing-kernel-module-management&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Kernel Module Management (KMM) Operator manages, builds, signs and deploys out-of-tree kernel modules and device plugins on OpenShift Container Platform clusters.&lt;/p&gt;
&lt;p&gt;KMM adds, for the HUB/Spoke scenario, a new ManagedClusterModule which describes an out-of-tree kernel module and its associated device plugin. You can use ManagedClusterModule resources to configure how to load the module, define &lt;a href=&#34;https://kmm.sigs.k8s.io/documentation/module_loader_image/&#34;&gt;ModuleLoader&lt;/a&gt; images for kernel versions, and include instructions for building and signing modules for specific kernel versions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Showing calendar events in Telegram</title>
      <link>https://iranzo.io/blog/2023/03/21/showing-calendar-events-in-telegram/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2023/03/21/showing-calendar-events-in-telegram/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve a Telegram group, it might be interesting the ability of &lt;a href=&#34;https://t.me/redken_bot&#34;&gt;https://t.me/redken_bot&lt;/a&gt; for adding a calendar &lt;code&gt;ical&lt;/code&gt; that automates publishing each day the events in the agenda for the day.&lt;/p&gt;
&lt;p&gt;If you did read &lt;a href=&#34;../../blog/2019/09/17/python-and-icalendar-ics-processing/&#34;&gt;Python and iCalendar ICS processing&lt;/a&gt;, part of the basis in that article are part of the bot and are easily used:&lt;/p&gt;
&lt;p&gt;For configuring, only a few simple steps are required:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have a calendar ICS/webcal accessible (for example a public Google Calendar one)&lt;/li&gt;
&lt;li&gt;Have a Telegram group where we do want to publish the events&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;@redken_bot&lt;/code&gt; to the group&lt;/li&gt;
&lt;li&gt;Specify the URL del calendar and the name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lets see some screenshots of the process for you to check how easily it can be achieved.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating SSH keys loading for Ansible usage</title>
      <link>https://iranzo.io/tips/automatesshkeys/</link>
      <pubDate>Thu, 02 Mar 2023 16:40:32 +0000</pubDate>
      <guid>https://iranzo.io/tips/automatesshkeys/</guid>
      <description>&lt;p&gt;For using Ansible it&amp;rsquo;s required to have a working set of ssh-keys already deployed.&lt;/p&gt;
&lt;p&gt;If you get a set of systems that have not been provisioned by you and are missing the SSH keys, having it fixed might take a while if doing it manually. Good news is that you can use a script in &lt;code&gt;expect&lt;/code&gt; to cover this part:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-expect&#34; data-lang=&#34;expect&#34;&gt;#!/usr/bin/expect -f
# set Variables
set password [lrange $argv 0 0]
set ipaddr [lrange $argv 1 1]

# now connect to remote system
spawn ssh-copy-id root@$ipaddr
match_max 100000

# Check for initial connection (add key of host)
set timeout 5
expect &amp;#34;yes/no&amp;#34; { send -- &amp;#34;yes\r&amp;#34; }

# Check for password prmpt
set timeout 120
# Look for passwod prompt
expect &amp;#34;password:&amp;#34; { send -- &amp;#34;$password\r&amp;#34; }
# send blank line (\r) to come back
send -- &amp;#34;\n&amp;#34;
expect eof
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This script, when used like:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using ChatGPT for writing Risu Plugins</title>
      <link>https://iranzo.io/blog/2023/03/02/using-chatgpt-for-writing-risu-plugins/</link>
      <pubDate>Thu, 02 Mar 2023 17:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2023/03/02/using-chatgpt-for-writing-risu-plugins/</guid>
      <description>&lt;p&gt;Lately, there&amp;rsquo;s a lot of interest on &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt;, and yes, it&amp;rsquo;s really impressive the way it processes the context to provide answers to the questions.&lt;/p&gt;
&lt;p&gt;To give it a try, and put into play the requirements for writing a &lt;a href=&#34;../../tags/risu/&#34;&gt;Risu&lt;/a&gt; plugin, I wrote some of the requirements in a paragraph:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I want to create a bash script for checking system status.&lt;/p&gt;
&lt;p&gt;The script should use return codes to indicate success, failure, information, error or skipped via the values stored in the variables $RC_OKAY, $RC_SKIPPED, $RC_ERROR, $RC_FAILED and $RC_INFO.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enable rootless podman on Fedora</title>
      <link>https://iranzo.io/blog/2023/01/27/enable-rootless-podman-on-fedora/</link>
      <pubDate>Fri, 27 Jan 2023 09:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2023/01/27/enable-rootless-podman-on-fedora/</guid>
      <description>&lt;p&gt;With podman we can setup containers for being used for non root users by performing some simple steps:&lt;/p&gt;
&lt;h2 id=&#34;install-required-packages&#34;&gt;Install required packages&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnf -y install slirp4netns fuse-overlayfs crun podman shadow-utils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Force the number of user namespaces (might be required on some environments):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user.max_user_namespaces=28633&amp;#34;&lt;/span&gt; &amp;gt; /etc/sysctl.d/userns.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sysctl -p /etc/sysctl.d/userns.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;delegate&#34;&gt;Delegate&lt;/h2&gt;
&lt;p&gt;Allows to define which resources are available&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p /etc/systemd/system/user@.service.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; EOF &amp;gt; /etc/systemd/system/user@.service.d/delegate.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Service]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Delegate=cpu cpuset io memory pids
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To verify it has been done correctly, logout and login with the user and execute:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kernel Module Management testing</title>
      <link>https://iranzo.io/blog/2023/01/19/kernel-module-management-testing/</link>
      <pubDate>Thu, 19 Jan 2023 08:55:11 +0000</pubDate>
      <guid>https://iranzo.io/blog/2023/01/19/kernel-module-management-testing/</guid>
      <description>&lt;p&gt;Following on the &lt;a href=&#34;../../blog/2022/12/23/using-kcli-to-prepare-for-open-cluster-management-testing/&#34;&gt;Using Kcli to prepare for OCM testing&lt;/a&gt;, we&amp;rsquo;re going to prepare KMM testing in Hub-Spoke approach.&lt;/p&gt;
&lt;p&gt;First we need to prepare our &lt;code&gt;.docker/config.json&lt;/code&gt; with the contents of our OpenShift pull secret used with &lt;code&gt;Kcli&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p ~/.docker/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp openshift_pull.json ~/.docker/config.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;warning-advisories&#34;&gt;Warning advisories&lt;/h2&gt;
&lt;div class=&#34;admonition note&#34;&gt;
    &lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
    &lt;p class=&#34;admonition&#34;&gt;Semi-scripted version available at &lt;a href=&#34;automate.sh&#34;&gt;automate.sh&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;admonition warning&#34;&gt;
    &lt;p class=&#34;admonition-title&#34;&gt;Warning&lt;/p&gt;
    &lt;p class=&#34;admonition&#34;&gt;We&amp;rsquo;re using pre-release bits of the software, that&amp;rsquo;s why we need to define a custom catalog for both the Hub and the Spokes. Once KMM is released it will be available from the official one and just the Policy will be needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enable Libvirt rw socket on RHEL9</title>
      <link>https://iranzo.io/tips/rhel9-libvirtd/</link>
      <pubDate>Thu, 12 Jan 2023 14:32:50 +0000</pubDate>
      <guid>https://iranzo.io/tips/rhel9-libvirtd/</guid>
      <description>&lt;p&gt;RHEL9 by default uses read-only socket which is not usable by some tools like &lt;a href=&#34;../../tags/kcli/&#34;&gt;Kcli&lt;/a&gt;&amp;hellip; to enable it use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable --now libvirtd.socket libvirtd-ro.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop libvirtd.service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable --now virtproxyd.socket virtproxyd-ro.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop virtproxyd.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Using Kcli to prepare for Open Cluster Management testing</title>
      <link>https://iranzo.io/blog/2022/12/23/using-kcli-to-prepare-for-open-cluster-management-testing/</link>
      <pubDate>Fri, 23 Dec 2022 14:04:45 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/12/23/using-kcli-to-prepare-for-open-cluster-management-testing/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/karmab/Kcli&#34;&gt;Kcli&lt;/a&gt; allows to quickly interact with different virtualization platforms to build machines with some specific configurations, and via the use of &lt;code&gt;plans&lt;/code&gt; it allows to automate most of the setup required to have an environment ready.&lt;/p&gt;
&lt;p&gt;In our case, let&amp;rsquo;s setup an environment to practice with &lt;a href=&#34;https://open-cluster-management.io/getting-started/quick-start/&#34;&gt;Open Cluster Management&lt;/a&gt; but instead of using kind clusters, let&amp;rsquo;s use VM&amp;rsquo;s.&lt;/p&gt;
&lt;div class=&#34;admonition note&#34;&gt;
    &lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
    &lt;p class=&#34;admonition&#34;&gt;We&amp;rsquo;ll require to setup an &lt;code&gt;openshift_pull.json&lt;/code&gt; file for Kcli to consume when accessing the required resources for this to work. That file, contains the credentials for accessing several container registries used for the deployment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[python] Generate ranges from items</title>
      <link>https://iranzo.io/blog/2022/11/25/python-generate-ranges-from-items/</link>
      <pubDate>Fri, 25 Nov 2022 07:00:46 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/11/25/python-generate-ranges-from-items/</guid>
      <description>&lt;p&gt;Some years ago, I added a script for updating headers for &lt;code&gt;(C)&lt;/code&gt; in the python files I was developing for &lt;a href=&#34;../../tags/risu/&#34;&gt;Risu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this way, the header got the list of authors and years working on the files updated automatically.&lt;/p&gt;
&lt;p&gt;With the pass of the years, the list started to became a bit too long, so I worked on creating code for getting ranges instead.&lt;/p&gt;
&lt;p&gt;This is the code I used:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getranges&lt;/span&gt;(data):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    From list of strings representing numbers, get ranges and return list of strings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param data: list of strings representing numbers
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return: list of strings with number ranges when &amp;gt; 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Convert to integers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [int(i) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; data:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Prepare iteration loop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    idata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iter(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; next(idata)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; first
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Process next item&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; following &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; idata:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; following &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; prev &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Years are continuum, just update previous&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; following
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Years are not continuum, end range and start again&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;# Only one item in difference, append items individually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(prev)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (first, prev))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; following
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Catchall for regular execution or last remaining range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Only one item in difference, append items individually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(prev)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (first, prev))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Convert back to text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [str(i) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; result]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With it, previous headers like:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automate code build and deployment with ansible</title>
      <link>https://iranzo.io/blog/2022/11/09/automate-code-build-and-deployment-with-ansible/</link>
      <pubDate>Wed, 09 Nov 2022 07:00:46 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/11/09/automate-code-build-and-deployment-with-ansible/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s say that we want to keep our system updated with some code which is not distributed as a regular package, but as a code in a repository (which unfortunately, it&amp;rsquo;s a pretty common situation).&lt;/p&gt;
&lt;p&gt;As a part of the ansible playbooks used for the hosts, I can add a snippet like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;gitrepos&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/myrepo/repo.git&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;tag&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tagtocheckout&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;folder&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/path-for-check-out&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;chdir&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subdir to enter&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;make build&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;exec&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build/mybuiltbinary&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this definition in the host inventory, we can then in our playbook to perform several steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenShift&#39;s oc debug and parallel execution</title>
      <link>https://iranzo.io/blog/2022/11/03/openshifts-oc-debug-and-parallel-execution/</link>
      <pubDate>Thu, 03 Nov 2022 14:13:32 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/11/03/openshifts-oc-debug-and-parallel-execution/</guid>
      <description>&lt;p&gt;A colleague reported some issues in the OpenShift troubleshooting and diagnosis scripts at &lt;a href=&#34;https://github.com/RHsyseng/openshift-checks/&#34;&gt;OpenShift-checks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some time ago I did contribute some changes to use functions and allow using the &lt;a href=&#34;https://github.com/risuorg/risu&#34;&gt;RISU&lt;/a&gt; wrapper to the scripts, helping consuming the results via RISU&amp;rsquo;s HTML interface.&lt;/p&gt;
&lt;p&gt;As my colleague reported, for some plugins, the output of the command was not shown in the HTML Interface.&lt;/p&gt;
&lt;p&gt;After some investigation, it was found that parallel execution for the plugins was causing no output to be shown, but when filtering to individual ones via &lt;code&gt;risu -i XXXXXXX/plugin -l&lt;/code&gt; it was working fine&amp;hellip; the problem was not the check itself, as both of them worked fine when executed individually but failed when executing them together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible - dynamically include Jinja templates and tasks</title>
      <link>https://iranzo.io/blog/2022/09/24/ansible-dynamically-include-jinja-templates-and-tasks/</link>
      <pubDate>Sat, 24 Sep 2022 11:13:32 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/09/24/ansible-dynamically-include-jinja-templates-and-tasks/</guid>
      <description>&lt;p&gt;For my ansible playbooks, I wanted to be able to add several new templates to be copied to target system, and additionally be able to perform some commands for them without having to specify each individual file/template to copy.&lt;/p&gt;
&lt;p&gt;My approach:&lt;/p&gt;
&lt;p&gt;Define for the hosts I want to find templates/playbooks define a var named &lt;code&gt;extras&lt;/code&gt; for the relevant hosts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;extras&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;ntp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;certificates&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The names defined (in above example &lt;code&gt;ntp&lt;/code&gt; and &lt;code&gt;certificates&lt;/code&gt;) are just name of folders laying inside &lt;code&gt;tasks/templates/${folder}&lt;/code&gt; that are searched and included or excluded based on &lt;code&gt;extras&lt;/code&gt; values.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Include Ansible playbooks sorted</title>
      <link>https://iranzo.io/tips/include-sorted-playbooks/</link>
      <pubDate>Fri, 23 Sep 2022 11:13:32 +0000</pubDate>
      <guid>https://iranzo.io/tips/include-sorted-playbooks/</guid>
      <description>&lt;p&gt;Use sorted list for included files vs random provided by &lt;code&gt;with_fileglob&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Include tasks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;include_tasks&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{item}}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;loop&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ query(&amp;#39;fileglob&amp;#39;, &amp;#39;tasks/*.yaml&amp;#39;) | sort }}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Check Agent status per state</title>
      <link>https://iranzo.io/tips/acm-host-status/</link>
      <pubDate>Wed, 10 Aug 2022 14:01:32 +0000</pubDate>
      <guid>https://iranzo.io/tips/acm-host-status/</guid>
      <description>&lt;p&gt;Check agent status per state&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;oc get agent -A -o jsonpath=&amp;#39;{range .items[*]}{@.status.debugInfo.state}{\&amp;#34;\n\&amp;#34;}{end}&amp;#39; |sort | uniq --count&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Unsupported upgrade for RHEL-based distributions without reinstallation</title>
      <link>https://iranzo.io/blog/2022/04/23/unsupported-upgrade-for-rhel-based-distributions-without-reinstallation/</link>
      <pubDate>Sat, 23 Apr 2022 21:23:48 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/04/23/unsupported-upgrade-for-rhel-based-distributions-without-reinstallation/</guid>
      <description>&lt;p&gt;Most systems, based on RHEL, were not able to upgrade without
reinstallation, or best said, not supported. The new version, that was
released at around 18 months later contained so many changes that it was
hard to test the upgrades themselves until &lt;code&gt;leapp&lt;/code&gt; was introduced.&lt;/p&gt;
&lt;p&gt;Check the lifecycle here: &lt;a href=&#34;https://access.redhat.com/support/policy/updates/errata&#34;&gt;https://access.redhat.com/support/policy/updates/errata&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, the biggest problem could be the incompatibility of packages or
package formats&amp;hellip; but as usually there were some middle layers it was
possible to upgrade without reinstallation by performing some manual steps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logitech R400 remote presentation controller on Linux</title>
      <link>https://iranzo.io/blog/2022/04/01/logitech-r400-remote-presentation-controller-on-linux/</link>
      <pubDate>Fri, 01 Apr 2022 07:31:42 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/04/01/logitech-r400-remote-presentation-controller-on-linux/</guid>
      <description>&lt;p&gt;Since long ago I had it in my mind getting one remote presenter, but most presenters just had two buttons, and the ones that looked to be valid for my use case, required four and seems that only &lt;code&gt;Rii&lt;/code&gt; had similar devices, but I didn&amp;rsquo;t went for it as it was not a huge need, so I ended up with a mini keyboard I had for Raspberry Pi and some debugging in case I had that need.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to stake on NYM Validator 🐳🐳🐳</title>
      <link>https://iranzo.io/blog/2021/09/28/how-to-stake-on-nym-validator/</link>
      <pubDate>Tue, 28 Sep 2021 17:20:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/09/28/how-to-stake-on-nym-validator/</guid>
      <description>This article describes how to stake your token against a NYM cosmos validator</description>
    </item>
    <item>
      <title>imapfilter for Gmail</title>
      <link>https://iranzo.io/blog/2021/07/07/imapfilter-for-gmail/</link>
      <pubDate>Wed, 07 Jul 2021 22:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/07/07/imapfilter-for-gmail/</guid>
      <description>Learn on how to use imapfilter against Gmail for classifying the messages</description>
    </item>
    <item>
      <title>UEFI boot order change</title>
      <link>https://iranzo.io/blog/2021/07/01/uefi-boot-order-change/</link>
      <pubDate>Thu, 01 Jul 2021 22:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/07/01/uefi-boot-order-change/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;In case you&amp;rsquo;ve a dual boot machine, sometimes it might happen that &lt;code&gt;grub&lt;/code&gt; menu is no longer appearing.&lt;/p&gt;
&lt;p&gt;For systems using regular BIOS, a &lt;code&gt;grub-install&lt;/code&gt; against the device it was installed might be required, but when using UEFI, it&amp;rsquo;s really easy to use a rescue media and execute &lt;code&gt;efibootmgr&lt;/code&gt; to alter the boot order.&lt;/p&gt;
&lt;p&gt;When executing &lt;code&gt;efibootmgr&lt;/code&gt;, it might output some information like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BootCurrent: &lt;span style=&#34;color:#ae81ff&#34;&gt;0001&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BootOrder: 0001,0019,001D,001C,0017,0018,001A,001B,001E,001F,0020,0000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0000* Windows Boot Manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0001* Fedora
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0010  Setup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0011  Boot Menu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0012  Diagnostic Splash Screen
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0013  Lenovo Diagnostics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0014  Startup Interrupt Menu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0015  Rescue and Recovery
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0016  MEBx Hot Key
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0017* USB CD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0018* USB FDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0019* NVMe0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001A* NVMe1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001B* ATA HDD2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001C* ATA HDD3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001D* ATA HDD0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001E* ATA HDD1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001F* USB HDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0020* PCI LAN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0021* IDER BOOT CDROM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0022* IDER BOOT Floppy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0023* ATA HDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0024* ATAPI CD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note there, the &lt;code&gt;BootCurrent&lt;/code&gt; and the &lt;code&gt;BootOrder&lt;/code&gt;, the numbers in the &lt;code&gt;BootOrder&lt;/code&gt; correspond to the &lt;code&gt;Boot####&lt;/code&gt; that are listed below it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redken machine learning for spam detection</title>
      <link>https://iranzo.io/blog/2021/06/24/redken-machine-learning-for-spam-detection/</link>
      <pubDate>Thu, 24 Jun 2021 22:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/06/24/redken-machine-learning-for-spam-detection/</guid>
      <description>&lt;p&gt;For some of the telegram groups I&amp;rsquo;m in, I&amp;rsquo;ve been detecting users that after some period of time, just publish spam messages of any topic.&lt;/p&gt;
&lt;p&gt;There are many bots for controlling when a user joins, by showing a CAPTCHA that user must resolve (either clicking a button, answering a mathematical operation, inputting a CAPTCHA image text, etc).&lt;/p&gt;
&lt;p&gt;Some time ago, a colleague was using Machine Learning and I wanted to have a look at it and it would make a good feature to implement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Geo replication with syncthing</title>
      <link>https://iranzo.io/blog/2021/06/12/geo-replication-with-syncthing/</link>
      <pubDate>Sat, 12 Jun 2021 21:40:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/06/12/geo-replication-with-syncthing/</guid>
      <description>&lt;p&gt;Some years ago I started using geo replication to keep a copy of all the pictures, docs, etc&lt;/p&gt;
&lt;p&gt;After being using BitTorrent sync and later resilio sync (even if I didn&amp;rsquo;t fully liked the idea of it being not open source), I gave up. My NAS with 16 GB of ram, even if a bit older (HP N54L), seemed not to have enough memory to run it, and was constantly swapping.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to check if a system is virtual</title>
      <link>https://iranzo.io/blog/2021/05/10/how-to-check-if-a-system-is-virtual/</link>
      <pubDate>Mon, 10 May 2021 14:30:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/05/10/how-to-check-if-a-system-is-virtual/</guid>
      <description>&lt;p&gt;I was improving a playbook in Ansible and wanted to find a way to find if a system was virtual or not to decide about some tunning like setting &lt;code&gt;tuned-adm profile virtual-guest&lt;/code&gt; or disable the power off when the lid is closed.&lt;/p&gt;
&lt;p&gt;After some research and try-except situations I got to this one that seemed to work (I had to tune it as one desktop machine was missing the /sys entry I was using before):&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to run a NYM Validator</title>
      <link>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-validator/</link>
      <pubDate>Sun, 09 May 2021 12:40:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-validator/</guid>
      <description>&lt;p&gt;As said in the article about &lt;a href=&#34;../../blog/2021/05/09/how-to-run-a-nym-mixnode/&#34;&gt;mixnodes&lt;/a&gt;, NYM is a technology aiming for providing privacy for the communications.&lt;/p&gt;
&lt;p&gt;Apart of the mixnodes, other key piece in the infrastructure are the validators.&lt;/p&gt;
&lt;p&gt;As said, the project uses Open Source technology to run, and they have a nice docs with details on how to run a node at &lt;a href=&#34;https://nymtech.net/docs/&#34;&gt;https://nymtech.net/docs/&lt;/a&gt;, and the one relevant for mixnodes at &lt;a href=&#34;https://nymtech.net/docs/run-nym-nodes/validators/&#34;&gt;https://nymtech.net/docs/run-nym-nodes/validators/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this case, we can follow the instructions for compiling, but I faced some issues (compiling went fine, but initial sync failed), so in this case, we will use the pre-compiled version provided with the &lt;code&gt;0.10.0&lt;/code&gt; release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to run a NYM mixnode</title>
      <link>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-mixnode/</link>
      <pubDate>Sun, 09 May 2021 12:30:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-mixnode/</guid>
      <description>&lt;p&gt;Some time ago I&amp;rsquo;ve started running a NYM mixnode. &lt;code&gt;NYM&lt;/code&gt; is a project that targets improving privacy by decomposing network packages from different hosts, so that origin and target cannot be traced.&lt;/p&gt;
&lt;p&gt;You can check more about the NYM project at their site at &lt;a href=&#34;https://nymtech.net/&#34;&gt;https://nymtech.net/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project uses Open Source technology to run, and they have a nice docs with details on how to run a node at &lt;a href=&#34;https://nymtech.net/docs/&#34;&gt;https://nymtech.net/docs/&lt;/a&gt;, and the one relevant for mixnodes at &lt;a href=&#34;https://nymtech.net/docs/run-nym-nodes/mixnodes/&#34;&gt;https://nymtech.net/docs/run-nym-nodes/mixnodes/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubiquiti UniFi for WiFi network</title>
      <link>https://iranzo.io/blog/2021/01/01/ubiquiti-unifi-for-wifi-network/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/01/01/ubiquiti-unifi-for-wifi-network/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;During the pandemic I wanted to work a bit on the wireless system at home, the router provided by the ISP was having already issues that resulted in WiFi devices not connecting and only new devices were able to report &amp;lsquo;AP full&amp;rsquo; message when the connection failed.&lt;/p&gt;
&lt;p&gt;First I started testing the ASUS devices like the &lt;a href=&#34;https://www.amazon.es/dp/B07SCBMMS8?tag=redken-21&#34;&gt;AX92U&lt;/a&gt; which had WiFi 6 support. My flat is not that big, but as I had some issues with 2.4Ghz devices like smart power plugs, I decided to go for a second unit of the same router and test the &lt;code&gt;AI-Mesh&lt;/code&gt; that was announced by ASUS as the best way to extend coverage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring OpenShift with self-contained NTP</title>
      <link>https://iranzo.io/blog/2020/12/07/configuring-openshift-with-self-contained-ntp/</link>
      <pubDate>Mon, 07 Dec 2020 14:10:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/12/07/configuring-openshift-with-self-contained-ntp/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In a regular OpenShift environment, NTP server is more less like this:


  


&lt;figure&gt;
  &lt;img
    src=&#39;https://g.gravizo.com/svg?%0a%0a%20%20%20%20%20%20digraph%20connected%20%7b%0a%20%20%20%20%20%20%20%20%20%20%2f%2f%20title%0a%20%20%20%20%20%20%20%20%20%20labelloc%3d%22t%22%3b%0a%20%20%20%20%20%20%20%20%20%20label%3d%22Connected%20Cluster%22%3b%0a%20%20%20%20%20%20%20%20%20%20node%20%5bshape%20%3d%20circle%5d%3b%0a%20%20%20%20%20%20%20%20%20%20%7b%20rank%20%3d%20same%3b%20%22External%20NTP%20Server%22%3b%7d%0a%20%20%20%20%20%20%20%20%20%20%7b%20rank%20%3d%20same%3b%20%22Master%201%22%3b%20%22Master%202%22%3b%20%22Master%203%22%7d%0a%20%20%20%20%20%20%20%20%20%20%7b%20rank%20%3d%20same%3b%20%22Worker%201%22%3b%20%22Worker%202%22%3b%20%22Worker%203%22%7d%0a%20%20%20%20%20%20%20%20%20%20%22Master%201%22%20-%3e%20%22External%20NTP%20Server%22%20%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Master%202%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Master%203%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Worker%201%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Worker%202%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Worker%203%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%7d%0a%0a&#39;
    alt=&#39;Diagram&#39;
    /&gt;
    &lt;figcaption&gt;Diagram&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In a self-contained cluster with no connection to external networks NTP server is not reachable, but a reachable NTP server is required for proper cluster synchronization.
Cluster does use SSL certificates that require validation and might fail if the dates between the systems are not in sync or at least pretty close in time.&lt;/p&gt;


  


&lt;figure&gt;
  &lt;img
    src=&#39;https://g.gravizo.com/svg?%0adigraph%20disconnected%20%7b%0a%2f%2f%20title%0alabelloc%3d%22t%22%3b%0alabel%3d%22Disconnected%20Cluster%22%3b%0anode%20%5bshape%20%3d%20circle%5d%3b%0a%7b%20rank%20%3d%20same%3b%20%22Master%201%22%3b%20%22Master%202%22%3b%20%22Master%203%22%7d%0a%7b%20rank%20%3d%20same%3b%20%22Worker%201%22%3b%20%22Worker%202%22%3b%20%22Worker%203%22%7d%0a%22Master%201%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Master%201%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%22Master%202%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Master%202%22%20-%3e%20%22Master%203%22%5bcolor%3d%22green%22%5d%0a%22Master%203%22%20-%3e%20%22Master%201%22%5bcolor%3d%22purple%22%5d%0a%22Master%203%22%20-%3e%20%22Master%202%22%5bcolor%3d%22red%22%5d%0a%22Worker%201%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Worker%201%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Worker%201%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%22Worker%202%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Worker%202%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Worker%202%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%22Worker%203%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Worker%203%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Worker%203%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%7d%0a&#39;
    alt=&#39;Diagram&#39;
    /&gt;
    &lt;figcaption&gt;Diagram&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We&amp;rsquo;ve several components already available in our OpenShift cluster that are very useful:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upstream/Downstream documentation workflow</title>
      <link>https://iranzo.io/blog/2020/12/01/upstream/downstream-documentation-workflow/</link>
      <pubDate>Tue, 01 Dec 2020 14:10:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/12/01/upstream/downstream-documentation-workflow/</guid>
      <description>&lt;p&gt;During last year I&amp;rsquo;ve worked with the &lt;a href=&#34;https://github.com/openshift-kni/baremetal-deploy/&#34;&gt;https://github.com/openshift-kni/baremetal-deploy/&lt;/a&gt; repository after being working in the KNI Community team that was in charge of &amp;lt;KubeVirt.io&amp;gt; and &amp;lt;Metal3.io&amp;gt; where some of the below things were applied.&lt;/p&gt;
&lt;p&gt;One of the goals we had was to streamline the upstream &amp;lt;-&amp;gt; downstream process to keep changes done in the right way: get changes upstream and copy over downstream with minimal changes.&lt;/p&gt;
&lt;p&gt;We ended up using AsciiDoctor for building the documentation in the same way it&amp;rsquo;s done downstream so it&amp;rsquo;s just a matter of copying over the modules.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Actions for publishing</title>
      <link>https://iranzo.io/blog/2020/08/10/github-actions-for-publishing/</link>
      <pubDate>Mon, 10 Aug 2020 07:44:24 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/08/10/github-actions-for-publishing/</guid>
      <description>&lt;p&gt;When I started with &lt;a href=&#34;../../blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./&#34;&gt;blog-o-matic&lt;/a&gt; I had to involve external &amp;lsquo;Travis-CI&amp;rsquo;, generating a token on GitHub, setting environment variables on Travis, etc&lt;/p&gt;
&lt;p&gt;GitHub started enabling &lt;a href=&#34;https://github.com/features/actions&#34;&gt;&lt;code&gt;actions&lt;/code&gt;&lt;/a&gt; which allows to automate workflows in a similar way than Travis or other external providers allowed, but with one extra feature: configuration is defined inside &lt;code&gt;.github/&lt;/code&gt; folder of your repository, which makes incredibly easy to copy the setup for one tool to another (except of optional required tokens that are configured per repo).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go (golang) plugin in Citellus</title>
      <link>https://iranzo.io/blog/2020/06/14/go-golang-plugin-in-citellus/</link>
      <pubDate>Sun, 14 Jun 2020 11:44:24 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/06/14/go-golang-plugin-in-citellus/</guid>
      <description>&lt;p&gt;I wanted to practice a bit Go programing, so I divided that task in two parts, one, adding a golang extension for Citellus and a sample, but working plugin using it.&lt;/p&gt;
&lt;p&gt;If interested in the code it&amp;rsquo;s available at the review at &lt;a href=&#34;https://review.gerrithub.io/c/citellusorg/citellus/&amp;#43;/495622&#34;&gt;https://review.gerrithub.io/c/citellusorg/citellus/+/495622&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The final sample code for it has been:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Author: Pablo Iranzo Gómez (Pablo.Iranzo@gmail.com)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Header for citellus metadata&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// long_name: Report detected number of CPU&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// description: List the processors detected in the system&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// priority: 200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bufio&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;runtime&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;strconv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OKAY&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Atoi&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RC_OKAY&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SKIP&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Atoi&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RC_SKIPPED&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;INFO&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Atoi&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RC_INFO&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CITELLUS_ROOT&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CITELLUS_ROOT&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CITELLUS_LIVE&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Atoi&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CITELLUS_LIVE&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FAILED&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Atoi&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RC_FAILED&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CITELLUS_LIVE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;// Report # of CPU&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CPUS&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;runtime&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NumCPU&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Stderr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WriteString&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Itoa&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;CPUS&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Exit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;INFO&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CITELLUS_LIVE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Open&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;CITELLUS_ROOT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/proc/cpuinfo&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Stderr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WriteString&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failure to open required file &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CITELLUS_ROOT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/proc/cpuinfo&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Exit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;SKIP&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;counts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wordCount&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Stderr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WriteString&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;strconv&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Itoa&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;counts&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;processor&amp;#34;&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Exit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;INFO&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Stderr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WriteString&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Undefined CITELLUS_LIVE status&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Exit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;FAILED&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// Failback case, exiting as OK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Exit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;OKAY&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://forgetcode.com/go/2348-count-the-number-of-word-occurrence-in-given-a-file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wordCount&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rdr&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;io&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Reader&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;counts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;]&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;scanner&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bufio&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewScanner&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rdr&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;scanner&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Split&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;bufio&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ScanWords&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scanner&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Scan&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;word&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scanner&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Text&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;word&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;strings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ToLower&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;word&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;counts&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;word&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;counts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Of course, lot of googling helped to start building the pieces.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dell racadm remote ISO load</title>
      <link>https://iranzo.io/blog/2020/05/12/dell-racadm-remote-iso-load/</link>
      <pubDate>Tue, 12 May 2020 13:30:24 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/05/12/dell-racadm-remote-iso-load/</guid>
      <description>&lt;p&gt;In order to test IPv6 deployment on Dell hardware I was in need to patch the servers to ensure that UEFI boot mode is in use.&lt;/p&gt;
&lt;p&gt;Normally I would had use the DSU that runs from within Linux, but as the servers are part of an OpenShift installation (using &lt;a href=&#34;https://github.com/openshift-kni/baremetal-deploy&#34;&gt;baremetal-deploy&lt;/a&gt;) and using CoreOS as the underlying system I wanted to load ISO from HTTP server on the &lt;code&gt;deployhost&lt;/code&gt; (running RHEL).&lt;/p&gt;
&lt;p&gt;The command is not that hard, let&amp;rsquo;s first define some variables:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Language detection in @redken_bot</title>
      <link>https://iranzo.io/blog/2020/03/25/language-detection-in-@redken_bot/</link>
      <pubDate>Wed, 25 Mar 2020 20:00:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/03/25/language-detection-in-@redken_bot/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Before the move to Python3, &lt;a href=&#34;https://t.me/redken_bot&#34;&gt;redken&lt;/a&gt; had per-group language configuration by using i18n, with the upgrade/rewrite of Python3 code there were some issues and I had to remove the support, defaulting everything to English (most of the outputs where already in English so not a great loss).&lt;/p&gt;
&lt;p&gt;On another side, having to manually configure each channel could be problematic as most users just add the bot to their groups but don&amp;rsquo;t care about other settings that might be useful like &lt;code&gt;welcome&lt;/code&gt; message, &lt;code&gt;inactivity&lt;/code&gt; for kicking out inactive users, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Live Migration in KubeVirt</title>
      <link>https://iranzo.io/eko/2020-03-22-live-migration/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0200</pubDate>
      <guid>https://iranzo.io/eko/2020-03-22-live-migration/</guid>
      <description>KubeVirt leverages Live Migration to support workloads to keep running while nodes can be moved to maintenance, etc Check what is needed to get it working and how it works.</description>
    </item>
    <item>
      <title>Yaspeller hook for pre-commit</title>
      <link>https://iranzo.io/blog/2020/03/12/yaspeller-hook-for-pre-commit/</link>
      <pubDate>Thu, 12 Mar 2020 14:38:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/03/12/yaspeller-hook-for-pre-commit/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve made a PR that got merged into Yaspeller repository which adds support for &lt;code&gt;pre-commit&lt;/code&gt; to spell check your files.&lt;/p&gt;
&lt;p&gt;It requires simple configuration, just add this snippet to your &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;repo&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://github.com/hcodes/yaspeller.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;rev&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;hooks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;yaspeller&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;files&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\.en\\.md&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The plugin will then initialize and spell check your files via &lt;code&gt;yaspeller&lt;/code&gt;. It will use the standard &lt;code&gt;.yaspeller.json&lt;/code&gt; file for dictionary and settings and automate it for each new commit you work on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript for imgur gallery generation for PhotoSwipe and Pelican-Elegant</title>
      <link>https://iranzo.io/blog/2020/02/19/javascript-for-imgur-gallery-generation-for-photoswipe-and-pelican-elegant/</link>
      <pubDate>Wed, 19 Feb 2020 21:55:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/02/19/javascript-for-imgur-gallery-generation-for-photoswipe-and-pelican-elegant/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Using the following code from the Browser console:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;images&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;$$&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;img&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;images&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;lt;a href=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;images&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  data-size=&amp;#34;4032x3024&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;lt;img src=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;images&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; width=&amp;#34;403&amp;#34; height=&amp;#34;302&amp;#34;  alt=&amp;#34;Image description&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    `&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/div&amp;gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will output a copy-paste ready code for integrating in your blog post and leverage the picture gallery.&lt;/p&gt;
&lt;div class=&#34;admonition warning&#34;&gt;
    &lt;p class=&#34;admonition-title&#34;&gt;Warning&lt;/p&gt;
    &lt;p class=&#34;admonition&#34;&gt;Review the &lt;code&gt;data-size&lt;/code&gt; to make it match the image size as PhotoSwipe requires it to match image and adjust the &lt;code&gt;figcaption&lt;/code&gt; entry.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git commit reordering</title>
      <link>https://iranzo.io/blog/2020/02/13/git-commit-reordering/</link>
      <pubDate>Thu, 13 Feb 2020 20:30:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/02/13/git-commit-reordering/</guid>
      <description>&lt;p&gt;While I was working for a presentation for kid&amp;rsquo;s school at &lt;a href=&#34;%22campo-magnetico-auroras-fases-lunares-cohetes.md%22&#34;&gt;Magnetic field, Aurora, Lunar Phases and Rockets&lt;/a&gt;, I added 4 big videos to the presentation (as I was going to use them offline while presenting).&lt;/p&gt;
&lt;p&gt;I know what git is not the place for big binary files, and even Github proposed to use the LFS backend for that, but as it was just temporary, I went ahead.&lt;/p&gt;
&lt;p&gt;After that commit, I also wrote two more articles, the one on &lt;a href=&#34;../../blog/2020/02/08/lego-speed-champions-2020-review/&#34;&gt;Lego Speed Champions&lt;/a&gt; and the one on &lt;a href=&#34;../../blog/2020/02/12/galleria.io-and-photoswipe/&#34;&gt;Galleria.io and PhotoSwipe&lt;/a&gt;, so it became a problem to have big files in between, when my plan was to remove them in the end.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Galleria.io and PhotoSwipe</title>
      <link>https://iranzo.io/blog/2020/02/12/galleria.io-and-photoswipe/</link>
      <pubDate>Wed, 12 Feb 2020 07:30:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/02/12/galleria.io-and-photoswipe/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I was looking for an alternative for my (this) blog and hold pictures. I&amp;rsquo;m a lego fan so I wanted to get some pictures uploaded but without bloating the site.&lt;/p&gt;
&lt;p&gt;In the article &lt;a href=&#34;../../blog/2019/06/09/lego-75894-1967-mini-cooper-s-rally-and-buggy-moc-adaptation-as-mini-transporter/&#34;&gt;Lego Mini Cooper MOC&lt;/a&gt; I did add lot of pictures, same for &lt;a href=&#34;../../blog/2019/06/28/lego-80101-chinese-new-years-eve/&#34;&gt;Lego Chinese dinner&lt;/a&gt; and &lt;a href=&#34;../../blog/2019/06/28/lego-80102-dragon-dance/&#34;&gt;Lego Dragon Dance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was checking and how telegram does handle some links and found that
Instagram &amp;rsquo;links&amp;rsquo; get expanded to list the images inside directly to see if that could help in a task I was helping at &lt;a href=&#34;https://github.com/Pelican-Elegant/elegant&#34;&gt;Pelican-Elegant theme&lt;/a&gt; used at this site for creating a gallery.&lt;/p&gt;</description>
    </item>
    <item>
      <title>API access for Google Calendar and Google Sheet access</title>
      <link>https://iranzo.io/blog/2019/11/28/api-access-for-google-calendar-and-google-sheet-access/</link>
      <pubDate>Thu, 28 Nov 2019 17:11:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/11/28/api-access-for-google-calendar-and-google-sheet-access/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;During last days I&amp;rsquo;ve been playing around with python and API access to Google Sheets.&lt;/p&gt;
&lt;p&gt;Since some time ago, I already experimented with ICS parsing from python because added &lt;a href=&#34;https://t.me/redken_bot&#34;&gt;https://t.me/redken_bot&lt;/a&gt; access to calendar files (&lt;code&gt;.ics&lt;/code&gt;) so that it can provide daily reminders on chats about the events happening for the specific date, and had the chance to propose it&amp;rsquo;s usage to cover a specific use case: Accessing a spreadsheet in Google Sheets and parse its contents and output an ICS file so that the events listed and the dates specific for each one are available in an easier-to-consume approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python and iCalendar ICS processing</title>
      <link>https://iranzo.io/blog/2019/09/17/python-and-icalendar-ics-processing/</link>
      <pubDate>Tue, 17 Sep 2019 07:00:36 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/09/17/python-and-icalendar-ics-processing/</guid>
      <description>This article covers  how to do Internet Calendar processing of events in python and how those are leveraged in @redken_bot</description>
    </item>
    <item>
      <title>Baremetal Operator</title>
      <link>https://iranzo.io/eko/2019-09-11-baremetal-operator/</link>
      <pubDate>Wed, 11 Sep 2019 11:00:00 +0000</pubDate>
      <guid>https://iranzo.io/eko/2019-09-11-baremetal-operator/</guid>
      <description>&lt;p&gt;This article was published originally at &lt;a href=&#34;https://metal3.io/blog/2019/09/11/Baremetal-operator.html&#34;&gt;https://metal3.io/blog/2019/09/11/Baremetal-operator.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/metal3-io/baremetal-operator/&#34;&gt;baremetal operator&lt;/a&gt;, documented at &lt;a href=&#34;https://github.com/metal3-io/baremetal-operator/blob/master/docs/api.md&#34;&gt;https://github.com/metal3-io/baremetal-operator/blob/master/docs/api.md&lt;/a&gt;, it&amp;rsquo;s the Operator in charge of definitions of physical hosts, containing information about how to reach the Out of Band management controller, URL with the desired image to provision, plus other properties related with hosts being used for provisioning instances.&lt;/p&gt;
&lt;p&gt;Quoting from the project:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Bare Metal Operator implements a Kubernetes API for managing bare metal hosts. It maintains an inventory of available hosts as instances of the BareMetalHost Custom Resource Definition. The Bare Metal Operator knows how to:
Inspect the host&amp;rsquo;s hardware details and report them on the corresponding BareMetalHost. This includes information about CPUs, RAM, disks, NICs, and more.
Provision hosts with a desired image
Clean a host&amp;rsquo;s disk contents before or after provisioning.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Killercoda scenario redirection</title>
      <link>https://iranzo.io/blog/2019/07/31/killercoda-scenario-redirection/</link>
      <pubDate>Wed, 31 Jul 2019 07:39:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/07/31/killercoda-scenario-redirection/</guid>
      <description>&lt;p&gt;After my post about &lt;a href=&#34;../../blog/2019/06/11/killercoda-scenario-creation/&#34;&gt;killercoda&lt;/a&gt;, I did split my initial scenarios into &amp;lsquo;organizations&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;One of them, is in progress to get contributed upstream to &lt;a href=&#34;https://killercoda.com/kubevirt&#34;&gt;KubeVirt project killercoda&lt;/a&gt; (still getting some reviews to land on final repo), and the other is under &lt;a href=&#34;https://killercoda.com/citellus&#34;&gt;Citellus organization&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the goal was not to lose visits using the prior links, I contacted the team behind killercoda Support (thanks a lot Ben!!) and the requirements to get a &amp;lsquo;redirect&amp;rsquo; in place is to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Argos extension writing for Gnome3</title>
      <link>https://iranzo.io/blog/2019/06/27/argos-extension-writing-for-gnome3/</link>
      <pubDate>Thu, 27 Jun 2019 23:16:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/06/27/argos-extension-writing-for-gnome3/</guid>
      <description>&lt;p&gt;I was using from time ago this extension for Gnome named &lt;a href=&#34;https://github.com/p-e-w/argos&#34;&gt;Argos&lt;/a&gt; which allows to create useful data views using scripts written in whatever language of choice available, bash included.&lt;/p&gt;
&lt;p&gt;So far I had just a simple extension writing a UNICODE character, but with the suggestion of my colleague &lt;a href=&#34;http://www.sombrerorojo.com/&#34;&gt;Javi Ramírez&lt;/a&gt;, I decided to use the motivational idea to write a simple script to calculate how much you&amp;rsquo;ve earned so far in the day and show that information at a glance on your menu bar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Killercoda scenario creation</title>
      <link>https://iranzo.io/blog/2019/06/11/killercoda-scenario-creation/</link>
      <pubDate>Tue, 11 Jun 2019 21:16:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/06/11/killercoda-scenario-creation/</guid>
      <description>&lt;p&gt;After some time checking the scenarios at &lt;a href=&#34;https://learn.openshift.com&#34;&gt;https://learn.openshift.com&lt;/a&gt;, I decided to give it a try.&lt;/p&gt;
&lt;p&gt;With the help of &lt;a href=&#34;https://linuxera.org&#34;&gt;Mario Vázquez&lt;/a&gt;, author of &lt;a href=&#34;https://learn.openshift.com/introduction/federated-clusters/&#34;&gt;Getting Started with Kubefed&lt;/a&gt;, I did create two scenarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://killercoda.com/citellus/citellus&#34;&gt;How to use Citellus&lt;/a&gt; on &lt;a href=&#34;https://risuorg.github.io&#34;&gt;Citellus: Troubleshooting automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://killercoda.com/iranzo/kubevirt&#34;&gt;KubeVirt&lt;/a&gt; on a &amp;lsquo;browser-based&amp;rsquo; approach for &lt;a href=&#34;https://kubevirt.io/quickstart_minikube/&#34;&gt;MiniKube&lt;/a&gt; setup for validating KubeVirt: Kubernetes with VM Virtualization (versus the regular containers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check how them can be created by looking at their code at: &lt;a href=&#34;https://github.com/iranzo/katacoda-scenarios&#34;&gt;killercoda Scenarios&lt;/a&gt; or the &amp;lsquo;playable&amp;rsquo; version at &lt;a href=&#34;https://killercoda.com/iranzo/&#34;&gt;https://killercoda.com/iranzo/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use custom domain name with Blog-O-Matic</title>
      <link>https://iranzo.io/blog/2019/05/16/use-custom-domain-name-with-blog-o-matic/</link>
      <pubDate>Thu, 16 May 2019 22:29:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/05/16/use-custom-domain-name-with-blog-o-matic/</guid>
      <description>&lt;p&gt;As a recipe, if you want to enable a custom domain name on &lt;a href=&#34;../../blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./&#34;&gt;blog-o-matic&lt;/a&gt; a special file needs to be created on the &amp;lsquo;GitHub Pages&amp;rsquo; served &amp;lsquo;master&amp;rsquo; branch.&lt;/p&gt;
&lt;p&gt;In order to do so, edit &lt;code&gt;pelicanconf.py&lt;/code&gt; and add the following differences:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;diff --git a/pelicanconf.py b/pelicanconf.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;index 680abcb..fc3dd8f 100644
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--- a/pelicanconf.py
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ b/pelicanconf.py
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -46,13 +46,16 @@ AMAZON_ONELINK = &amp;#34;b63a2115-85f7-43a9-b169-5f4c8c275655&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; # Extra files customization
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-EXTRA_PATH_METADATA = {}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+EXTRA_PATH_METADATA = {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+    &amp;#39;extra/CNAME&amp;#39;: {&amp;#39;path&amp;#39;: &amp;#39;CNAME&amp;#39;},
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; EXTRA_TEMPLATES_PATHS = [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &amp;#34;plugins/revealmd/templates&amp;#34;,  # eg: &amp;#34;plugins/revealmd/templates&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-STATIC_PATHS = [ &amp;#39;images&amp;#39; ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+STATIC_PATHS = [ &amp;#39;images&amp;#39; , &amp;#39;extra&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ## ONLY TOUCH IF YOU KNOW WHAT YOU&amp;#39;RE DOING!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will copy the &lt;code&gt;CNAME&lt;/code&gt; file created in &lt;code&gt;content/extra/CNAME&lt;/code&gt; to the resulting &amp;lsquo;master&amp;rsquo; branch as &lt;code&gt;/CNAME&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>@redken_bot</title>
      <link>https://iranzo.io/redken_bot/</link>
      <pubDate>Mon, 04 Mar 2019 18:34:14 +0100</pubDate>
      <guid>https://iranzo.io/redken_bot/</guid>
      <description>Learn about Redken Telegram Bot usage and configuration settings.</description>
    </item>
    <item>
      <title>Telegram Redken bot documentation</title>
      <link>https://iranzo.io/redkendoc/telegram-redken_bot-documentation/</link>
      <pubDate>Mon, 04 Mar 2019 18:34:14 +0100</pubDate>
      <guid>https://iranzo.io/redkendoc/telegram-redken_bot-documentation/</guid>
      <description>&lt;p&gt;The new document is at &lt;a href=&#34;../../redkendoc/telegram-redken_bot-documentation/&#34;&gt;Redken Documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AwesomeSlides for converting LibreOffice ODP into revealjs</title>
      <link>https://iranzo.io/blog/2019/01/22/awesomeslides-for-converting-libreoffice-odp-into-revealjs/</link>
      <pubDate>Tue, 22 Jan 2019 20:51:27 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/22/awesomeslides-for-converting-libreoffice-odp-into-revealjs/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For some time now, I wanted to put the presentations I did in the past to be available, and since I&amp;rsquo;ve added support to &lt;a href=&#34;../../blog/2019/01/20/fixing-pelican-revealjs-plugin/&#34;&gt;my blog to render revealjs slides&lt;/a&gt;, I wanted to also put other presentations that I did in the past, probably (or for sure) outdated, but that were sitting in my computer drive.&lt;/p&gt;
&lt;p&gt;The presentations already got several transformations, but in the actual status they are stored as LibreOffice ODP files, that made it a bit difficult.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fixing pelican revealjs plugin</title>
      <link>https://iranzo.io/blog/2019/01/20/fixing-pelican-revealjs-plugin/</link>
      <pubDate>Sun, 20 Jan 2019 23:12:17 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/20/fixing-pelican-revealjs-plugin/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;After my recent talk about &lt;a href=&#34;../../blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./&#34;&gt;blog-o-matic&lt;/a&gt;, I was trying to upload somewhere the slides I used.&lt;/p&gt;
&lt;p&gt;Since some time ago I started using Reveal-MD, so I could use Markdown to create and show slides, but wanted also a way to upload them for consumption.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brookskindle/pelican-revealmd/&#34;&gt;Pelican-revealmd plugin&lt;/a&gt; seemed to be the answer.&lt;/p&gt;
&lt;p&gt;It does use pypandoc library and &lt;a href=&#34;https://pandoc.org&#34;&gt;&amp;lsquo;pandoc&amp;rsquo;&lt;/a&gt; for doing the conversion.&lt;/p&gt;
&lt;h2 id=&#34;the-problems-found&#34;&gt;The problems found&lt;/h2&gt;
&lt;p&gt;After some test, it had 3 issues:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blog-o-Matic - quickly get a GitHub hosted blog with Pelican, Elegant with little setup steps.</title>
      <link>https://iranzo.io/blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./</link>
      <pubDate>Wed, 09 Jan 2019 22:00:47 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve already covered some articles about automation with Travis-CI, GitHub,
and one step that seems a show-stopper for many users when trying to build a
website is on one side, the investment (domain, hosting, etc), the backend
being used (WordPress, static generators, etc)&amp;hellip;&lt;/p&gt;
&lt;p&gt;While preparing a talk for a group of co-workers covering several of those aspects, I came with the idea to create Blog-o-Matic, implementing many of those &amp;rsquo;learnings&amp;rsquo; in a &amp;lsquo;canned&amp;rsquo; way that can be easy to consume by users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSP Director baremetal hypervisor for CoreOS</title>
      <link>https://iranzo.io/blog/2019/01/08/osp-director-baremetal-hypervisor-for-coreos/</link>
      <pubDate>Tue, 08 Jan 2019 17:30:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/08/osp-director-baremetal-hypervisor-for-coreos/</guid>
      <description>&lt;h2 id=&#34;osp-director&#34;&gt;OSP Director&lt;/h2&gt;
&lt;p&gt;OSP Director (or upstream TripleO) is a life-cycle manager for OpenStack based on the idea of using &amp;lsquo;OpenStack&amp;rsquo; to deploy &amp;lsquo;OpenStack&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;To do so, it creates a management &amp;lsquo;Undercloud&amp;rsquo;, that is configured and prepared for later deploying an &amp;lsquo;overcloud&amp;rsquo; which is the one that will later run the workloads.&lt;/p&gt;
&lt;p&gt;TripleO/Director, also automates the inspection of hosts and tagging to the roles they will perform later in the &amp;lsquo;overcloud&amp;rsquo; setup, such as &amp;lsquo;controller&amp;rsquo;, &amp;lsquo;compute&amp;rsquo;, &amp;lsquo;storage&amp;rsquo;, or even mixed roles via &lt;code&gt;composable-roles&lt;/code&gt; support.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postgres repl SSL replication</title>
      <link>https://iranzo.io/blog/2019/01/08/postgres-repl-ssl-replication/</link>
      <pubDate>Tue, 08 Jan 2019 17:30:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/08/postgres-repl-ssl-replication/</guid>
      <description>&lt;h1 id=&#34;postgres-across-clusters&#34;&gt;Postgres across clusters&lt;/h1&gt;
&lt;p&gt;For Postgres to work across clusters we do need to have the data being synchronized.&lt;/p&gt;
&lt;p&gt;With some other databases we do have some master-master approach, but
usually have very strict requirements on latency, bandwidth, etc that we
cannot solve with On-Premise + external cloud providers.&lt;/p&gt;
&lt;p&gt;If the replication is based on the storage level instead, then you face that database servers don’t deal well if the data changes underneath it, so it leads to data corruption, on top of the storage-level issues/requirements as well on bandwidth, latency, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android TV and Netflix&#39;s tvq-pm-100 (5.2.5) error</title>
      <link>https://iranzo.io/blog/2018/12/30/android-tv-and-netflixs-tvq-pm-100-5.2.5-error/</link>
      <pubDate>Sun, 30 Dec 2018 19:26:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/12/30/android-tv-and-netflixs-tvq-pm-100-5.2.5-error/</guid>
      <description>&lt;h1 id=&#34;android-tv-versus-android-tv-box&#34;&gt;Android TV versus Android TV-Box&lt;/h1&gt;
&lt;p&gt;Android, being used in lot of mobile devices is also part of TVs and set-top boxes.&lt;/p&gt;
&lt;p&gt;The main difference between both approaches is the user interface and applications.&lt;/p&gt;
&lt;p&gt;Android TV-Box: it&amp;rsquo;s like a tablet or mobile connected to a TV and usually requires external keyboard, often integrated in the remote.&lt;/p&gt;
&lt;p&gt;Android TV: it&amp;rsquo;s a version of Android that incorporates TV changes in the OS so that it can be controlled with an arrow cursor remote plus back, home and microphone key.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Triggering a Travis-CI build on another repo</title>
      <link>https://iranzo.io/blog/2018/12/11/triggering-a-travis-ci-build-on-another-repo/</link>
      <pubDate>Tue, 11 Dec 2018 21:49:47 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/12/11/triggering-a-travis-ci-build-on-another-repo/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;After setting up &lt;a href=&#34;../../blog/2018/12/07/how-to-automate-via-travis-ci-publishing-of-new-pelican-pages-to-github-pages/&#34;&gt;build automation&lt;/a&gt; we also wanted it not to happen only when updating the &lt;code&gt;documentation&lt;/code&gt; repository.&lt;/p&gt;
&lt;p&gt;Besides hosting documentation, Elegant website also serves as a live demo of the current release. This meant, the website should be regenerated and updated every time when a documented is added or edited, and also when Elegant theme is updated.&lt;/p&gt;
&lt;p&gt;Github and Travis doesn&amp;rsquo;t offer dependent builds out of the box, so the trick goes to &amp;lsquo;signal&amp;rsquo; via a github token to trigger a Travis-CI build.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to automate via Travis CI publishing of new pelican pages to GitHub pages</title>
      <link>https://iranzo.io/blog/2018/12/07/how-to-automate-via-travis-ci-publishing-of-new-pelican-pages-to-github-pages/</link>
      <pubDate>Fri, 07 Dec 2018 16:00:47 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/12/07/how-to-automate-via-travis-ci-publishing-of-new-pelican-pages-to-github-pages/</guid>
      <description>&lt;h1 id=&#34;background&#34;&gt;Background&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Pelican-Elegant/elegant&#34;&gt;Elegant&lt;/a&gt; theme for pelican has been undergoing a big change from individual-driven effort to community, as part of this, one of the tasks to accomplish, has been the decoupling from author blog to project site for documentation.&lt;/p&gt;
&lt;p&gt;As we wanted this process to be both automated and allowed us to demonstrate via eat-your-own-dog-food that the theme works and how it looks, the idea was to automate the rendering of Pelican website with new documents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contributing to OSP upstream a.k.a. Peer Review</title>
      <link>https://iranzo.io/blog/2018/10/16/contributing-to-osp-upstream-a.k.a.-peer-review/</link>
      <pubDate>Tue, 16 Oct 2018 07:32:47 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/10/16/contributing-to-osp-upstream-a.k.a.-peer-review/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the article &amp;ldquo;&lt;a href=&#34;../../blog/2016/07/21/contributing-to-openstack/&#34;&gt;Contributing to OpenStack&lt;/a&gt;&amp;rdquo; we did cover on how to prepare accounts and prepare your changes for submission upstream (and even how to find &lt;code&gt;low hanging fruits&lt;/code&gt; to start contributing).&lt;/p&gt;
&lt;p&gt;Here, we&amp;rsquo;ll cover what happens behind the scene to get change published.&lt;/p&gt;
&lt;h2 id=&#34;upstream-workflow&#34;&gt;Upstream workflow&lt;/h2&gt;
&lt;h3 id=&#34;peer-review&#34;&gt;Peer review&lt;/h3&gt;
&lt;p&gt;Upstream contributions to OSP and other projects are based on Peer Review, that means that once a new set of code has been submitted, several steps for validation are required/happen before having it implemented.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Peru for syncing specific git repository files</title>
      <link>https://iranzo.io/blog/2018/09/25/peru-for-syncing-specific-git-repository-files/</link>
      <pubDate>Tue, 25 Sep 2018 22:17:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/09/25/peru-for-syncing-specific-git-repository-files/</guid>
      <description>&lt;h2 id=&#34;peru-a-repository-synchronizer&#34;&gt;Peru a repository synchronizer&lt;/h2&gt;
&lt;p&gt;Some projects upstream &lt;code&gt;bind&lt;/code&gt; together lot of files which might not be of interest, but still the
convenience of a &lt;code&gt;git pull&lt;/code&gt; to get latest updates, makes you to download the whole
repository for just a bunch of files or folders.&lt;/p&gt;
&lt;p&gt;For example, this website uses &lt;a href=&#34;http://getpelican.com/&#34;&gt;Pelican&lt;/a&gt; to generate the webpages out of markdown files. Pelican does have a rich set of &lt;a href=&#34;https://github.com/getpelican/pelican-plugins&#34;&gt;plugins&lt;/a&gt; but all of them are in the same folder in the &lt;code&gt;git checkout&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>First post on Red Hat blog</title>
      <link>https://iranzo.io/blog/2018/06/07/first-post-on-red-hat-blog/</link>
      <pubDate>Thu, 07 Jun 2018 22:32:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/06/07/first-post-on-red-hat-blog/</guid>
      <description>&lt;h2 id=&#34;new-blog-post&#34;&gt;New blog post!&lt;/h2&gt;
&lt;p&gt;After some great help and collaboration from all the colleagues reviewing, suggesting edits, we were able to prepare a blog post on &lt;a href=&#34;https://risuorg.github.io&#34;&gt;Citellus&lt;/a&gt;, the tool we develop as part of our daily work solving cases.&lt;/p&gt;
&lt;p&gt;Check it out at &lt;a href=&#34;https://www.redhat.com/en/blog/citellus-system-configuration-validation-tool?scid=701f2000000tnTlAAI&#34;&gt;Citellus: System configuration validation tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Enjoy! (and if you do, you can
&lt;a href=&#34;https://ko-fi.com/I2I4KDA0V&#34; target=&#34;_blank&#34;&gt;
  &lt;img src=&#34;https://storage.ko-fi.com/cdn/brandasset/kofi_s_logo_nolabel.png&#34; height=&#39;36&#39; style=&#39;border:0px;height:36px;vertical-align:middle;display:inline-block;&#39; border=&#34;0&#34;&gt;
&lt;/img&gt;
Buy Me a Coffee
&lt;/a&gt;
)
&lt;/p&gt;

&lt;p&gt;Pablo&lt;/p&gt;</description>
    </item>
    <item>
      <title>SuperSEC 2018!</title>
      <link>https://iranzo.io/blog/2018/05/13/supersec-2018/</link>
      <pubDate>Sun, 13 May 2018 10:50:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/05/13/supersec-2018/</guid>
      <description>&lt;h2 id=&#34;presentation-at-supersec-2018&#34;&gt;Presentation at SuperSEC 2018!&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve got a slot at SuperSEC 2018 (&lt;a href=&#34;https://supersec.es/&#34;&gt;https://supersec.es/&lt;/a&gt;): Congress on secure software development, happening in Almería, Spain on the weekend on 12-13 May.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll be presenting on 13th may at 10:50, and the &lt;a href=&#34;../../es/presentations/citellus/supersec2018/&#34;&gt;slide deck&lt;/a&gt;
and I&amp;rsquo;ll be updating this once I get the recording URL.&lt;/p&gt;
&lt;p&gt;Some data about the event:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Conference program and further data can be found at &lt;a href=&#34;https://supersec.es/programa/&#34;&gt;https://supersec.es/programa/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter feed: &lt;a href=&#34;https://twitter.com/SuperSEC_ES&#34;&gt;https://twitter.com/SuperSEC_ES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://photos.google.com/share/AF1QipNI_PqleRD_ImbRhu7sOgfpoOYGLXMUdanNUov7GDktY4-A-o0b_8pEsKnlBnLgZg?key=VEw2bDRDNHJ3QXdYR0NReXZrcWdOa2JjSEdyNWhB&#34;&gt;Shared Pics from attendees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Press coverage:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lavozdealmeria.com/noticia/12/almeria/151767/expertos-en-ciberseguridad-en-la-ual&#34;&gt;https://www.lavozdealmeria.com/noticia/12/almeria/151767/expertos-en-ciberseguridad-en-la-ual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the topics, the main focus was security on software from design phase to production and maintenance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevConf.cz 2018!</title>
      <link>https://iranzo.io/blog/2018/01/27/devconf.cz-2018/</link>
      <pubDate>Sat, 27 Jan 2018 15:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/01/27/devconf.cz-2018/</guid>
      <description>&lt;h2 id=&#34;presentation-at-devconfcz-2018&#34;&gt;Presentation at DevConf.cz 2018!&lt;/h2&gt;
&lt;p&gt;As highlighted in the prior edition of the &lt;a href=&#34;../../blog/2018/01/16/recent-changes-in-magui-and-citellus/&#34;&gt;&amp;lsquo;What&amp;rsquo;s new&amp;rsquo;&lt;/a&gt;, we got a slot for DevConf.cz 2018.&lt;/p&gt;
&lt;p&gt;During that &lt;a href=&#34;https://devconfcz2018.sched.com/event/DJXG/detect-pitfalls-of-osp-deployments-with-citellus&#34;&gt;slot&lt;/a&gt;, my colleagues Martin, Pablo and myself were presenting on the history and basics of Citellus and how it helps on debugging issues and providing faster analysis of already known ones.&lt;/p&gt;
&lt;p&gt;It is possible to watch the recording at &lt;a href=&#34;https://www.youtube.com/watch?v=SDzzqrUdn5A&#34;&gt;https://www.youtube.com/watch?v=SDzzqrUdn5A&lt;/a&gt; and the slides used at:
&lt;a href=&#34;https://github.com/citellusorg/citellus/blob/master/doc/devconfcz2018-presentation-revealmd.md&#34;&gt;https://github.com/citellusorg/citellus/blob/master/doc/devconfcz2018-presentation-revealmd.md&lt;/a&gt;
&lt;p&gt;
Enjoy! (and if you do, you can
&lt;a href=&#34;https://ko-fi.com/I2I4KDA0V&#34; target=&#34;_blank&#34;&gt;
  &lt;img src=&#34;https://storage.ko-fi.com/cdn/brandasset/kofi_s_logo_nolabel.png&#34; height=&#39;36&#39; style=&#39;border:0px;height:36px;vertical-align:middle;display:inline-block;&#39; border=&#34;0&#34;&gt;
&lt;/img&gt;
Buy Me a Coffee
&lt;/a&gt;
)
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recent changes in Magui and Citellus</title>
      <link>https://iranzo.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/</link>
      <pubDate>Tue, 16 Jan 2018 21:17:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/</guid>
      <description>&lt;h2 id=&#34;whats-new&#34;&gt;What&amp;rsquo;s new?&lt;/h2&gt;
&lt;p&gt;During recent weeks we&amp;rsquo;ve been coding and performing several changes to &lt;a href=&#34;../../blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; and &lt;a href=&#34;../../blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./&#34;&gt;Magui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Checking the latest logs or list of issues open and closed on github is probably not an easy task or the best way to get &amp;lsquo;up-to-date&amp;rsquo; with changes, so I&amp;rsquo;ll try to compile a few here.&lt;/p&gt;
&lt;p&gt;First of all, we&amp;rsquo;re going to present it at &lt;a href=&#34;https://devconfcz2018.sched.com/event/DJXG/detect-pitfalls-of-osp-deployments-with-citellus&#34;&gt;DevConf.cz 2018&lt;/a&gt;, so come stop-by if assisting :-)&lt;/p&gt;
&lt;p&gt;Some of the changes include&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>i18n and &#39;bash8&#39; in bash</title>
      <link>https://iranzo.io/blog/2017/10/26/i18n-and-bash8-in-bash/</link>
      <pubDate>Thu, 26 Oct 2017 21:17:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/10/26/i18n-and-bash8-in-bash/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In order to improve &lt;a href=&#34;../../blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; and &lt;a href=&#34;https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./&#34;&gt;Magui&lt;/a&gt;, we did implement some &lt;a href=&#34;../../blog/2017/08/17/jenkins-for-running-ci-tests/&#34;&gt;Unit testing&lt;/a&gt; to improve code quality.&lt;/p&gt;
&lt;p&gt;The tests written were made in python and with some changes it was also possible to validate the actual tests.&lt;/p&gt;
&lt;p&gt;Also, we did prepare the strings in python using gettext library so the actual messages can be translated to the language of choice (defaults to en, but can be changed via &lt;code&gt;--lang&lt;/code&gt; modifier of citellus).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins for running CI tests</title>
      <link>https://iranzo.io/blog/2017/08/17/jenkins-for-running-ci-tests/</link>
      <pubDate>Thu, 17 Aug 2017 23:54:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/08/17/jenkins-for-running-ci-tests/</guid>
      <description>&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;While working on &lt;a href=&#34;https://iranzo.io/blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; and &lt;a href=&#34;https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./&#34;&gt;Magui&lt;/a&gt; it soon became evident that Unit testing for validating the changes was a requirement.&lt;/p&gt;
&lt;p&gt;Initially, using a &lt;code&gt;.travis.yml&lt;/code&gt; file contained in the repo and the free service provided by &lt;a href=&#34;https://travis-ci.org&#34;&gt;https://travis-ci.org&lt;/a&gt; we soon got &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; repo providing information about if the builds succeeded or not.&lt;/p&gt;
&lt;p&gt;When it was decided to move to &lt;a href=&#34;https://gerrithub.io&#34;&gt;https://gerrithub.io&lt;/a&gt; to work in a more similar way to what is being done in upstream, we improved on the code commenting (peer review), but we lost the ability to run the tests in an automated way until the change was merged into github.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Magui for analysis of issues across several hosts.</title>
      <link>https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./</link>
      <pubDate>Mon, 31 Jul 2017 12:45:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; allows to check a sosreport against known problems identified on the provided tests.&lt;/p&gt;
&lt;p&gt;This approach is easy to implement and easy to test but has limitations when a problem can span across several hosts and only the problem reveals itself when a general analysis is performed.&lt;/p&gt;
&lt;p&gt;Magui tries to solve that by running the analysis functions inside citellus across a set of sosreports, unifying the data obtained per citellus plugin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Citellus: framework for detecting known issues in systems.</title>
      <link>https://iranzo.io/blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./</link>
      <pubDate>Wed, 26 Jul 2017 22:26:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./</guid>
      <description>Learn about Citellus, a framework that will help you detect known issues, and more insightful information about your system</description>
    </item>
    <item>
      <title>InfraRed for deploying OpenStack</title>
      <link>https://iranzo.io/blog/2017/02/23/infrared-for-deploying-openstack/</link>
      <pubDate>Thu, 23 Feb 2017 23:27:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2017/02/23/infrared-for-deploying-openstack/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/redhat-openstack/infrared/&#34;&gt;InfraRed&lt;/a&gt; is tool that allows to install/provision OpenStack. You can find the documentation for the project at &lt;a href=&#34;http://infrared.readthedocs.io&#34;&gt;http://infrared.readthedocs.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, developers and users are online in FreeNode at #infrared channel.&lt;/p&gt;
&lt;h2 id=&#34;why-infrared&#34;&gt;Why InfraRed?&lt;/h2&gt;
&lt;p&gt;Deploying OSP with OSP-d (TripleO) requires several setup steps for preparation, deployment, etc. InfraRed simplifies them by automating with ansible most of those steps and configuration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It allows to deploy several OSP versions&lt;/li&gt;
&lt;li&gt;Allows to ease connection to installed vm roles (Ceph, Computes, Controllers, Undercloud)&lt;/li&gt;
&lt;li&gt;Allows to define working environments so one InfraRed-running host can be used to manage different environments&lt;/li&gt;
&lt;li&gt;and much more&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setup-of-infrared-running-host&#34;&gt;Setup of InfraRed-running host&lt;/h2&gt;
&lt;p&gt;Setting InfraRed is quite easy, at the moment the version 2 (branch on github) is working pretty well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contributing to OpenStack</title>
      <link>https://iranzo.io/blog/2016/07/21/contributing-to-openstack/</link>
      <pubDate>Thu, 21 Jul 2016 17:32:47 +0200</pubDate>
      <guid>https://iranzo.io/blog/2016/07/21/contributing-to-openstack/</guid>
      <description>&lt;p&gt;Contributing to an OpenSource project might take some time at the beginning, the good thing with OpenStack is that there are lot of guides on how to start and collaborate.&lt;/p&gt;
&lt;p&gt;What I did is to look for a bug in the project tagged as &lt;a href=&#34;https://bugs.launchpad.net/openstack/&amp;#43;bugs?field.tag=low-hanging-fruit&amp;amp;orderby=status&amp;amp;start=0&#34;&gt;low-hanging-fruit&lt;/a&gt;, this allows to browse a large list of bugs that are classified as &lt;code&gt;easy&lt;/code&gt;, so they are the best place for new starters to get familiar with the workflow.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intel AMT on Linux for remote control/fencing</title>
      <link>https://iranzo.io/blog/2015/05/01/intel-amt-on-linux-for-remote-control/fencing/</link>
      <pubDate>Fri, 01 May 2015 11:35:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/05/01/intel-amt-on-linux-for-remote-control/fencing/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Some time ago, and after discussing with a colleague, I had a look on Intel&amp;rsquo;s &lt;a href=&#34;http://en.wikipedia.org/wiki/Intel_Active_Management_Technology&#34;&gt;AMT&lt;/a&gt;, and this week I
did a demo for another colleague as a cheap-replacement for having power fencing capabilities on commodity hardware.&lt;/p&gt;
&lt;p&gt;AMT provides a server-like Out of band management like iLO, iDRAC, RSB etc and it&amp;rsquo;s included in i3 with vPro processors/chipsets of some equipment.&lt;/p&gt;
&lt;p&gt;I did the test on a Lenovo X200/201 system I had as old laptop.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
