<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>FOSS on Pablo Iranzo Gómez blog</title>
    <link>https://iranzo.io/tags/foss/</link>
    <description>Recent content in FOSS on Pablo Iranzo Gómez blog</description>
    <image>
      <title>Pablo Iranzo Gómez blog</title>
      <url>https://iranzo.io/mugshot.png</url>
      <link>https://iranzo.io/mugshot.png</link>
    </image>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <lastBuildDate>Wed, 12 Feb 2025 09:35:31 +0000</lastBuildDate>
    <atom:link href="https://iranzo.io/tags/foss/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install gems on local user folder instead of system wide</title>
      <link>https://iranzo.io/tips/bundle-localuser/</link>
      <pubDate>Tue, 16 Jan 2024 16:27:50 +0000</pubDate>
      <guid>https://iranzo.io/tips/bundle-localuser/</guid>
      <description>&lt;p&gt;In order to test locally a Gemfile, define local path for the gems to avoid attempting to write to system-wide folders:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bundle config set --local path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/username/.gem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bundle install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>No matching key found</title>
      <link>https://iranzo.io/tips/no-matching-key-found/</link>
      <pubDate>Fri, 25 Aug 2023 09:42:48 +0000</pubDate>
      <guid>https://iranzo.io/tips/no-matching-key-found/</guid>
      <description>&lt;p&gt;As you might have experienced&amp;hellip; using a recent system to connect to a legacy one could be complicated as some insecure protocols have been disabled, with a message like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unable to negotiate with 192.168.2.82 port 22: no matching host key type found. Their offer: ssh-rsa,ssh-dss
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create an entry like this in your &lt;code&gt;.ssh/config&lt;/code&gt; file, so that insecure methods can be used to connect to a specific host:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host 192.168.2.82
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	HostKeyAlgorithms=+ssh-rsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	KexAlgorithms=+diffie-hellman-group1-sha1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  PubkeyAcceptedKeyTypes=+ssh-rsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	User root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or alternatively on the command line:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enable rootless podman on Fedora</title>
      <link>https://iranzo.io/blog/2023/01/27/enable-rootless-podman-on-fedora/</link>
      <pubDate>Fri, 27 Jan 2023 09:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2023/01/27/enable-rootless-podman-on-fedora/</guid>
      <description>&lt;p&gt;With podman we can setup containers for being used for non root users by performing some simple steps:&lt;/p&gt;
&lt;h2 id=&#34;install-required-packages&#34;&gt;Install required packages&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnf -y install slirp4netns fuse-overlayfs crun podman shadow-utils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Force the number of user namespaces (might be required on some environments):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user.max_user_namespaces=28633&amp;#34;&lt;/span&gt; &amp;gt; /etc/sysctl.d/userns.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sysctl -p /etc/sysctl.d/userns.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;delegate&#34;&gt;Delegate&lt;/h2&gt;
&lt;p&gt;Allows to define which resources are available&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p /etc/systemd/system/user@.service.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; EOF &amp;gt; /etc/systemd/system/user@.service.d/delegate.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[Service]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Delegate=cpu cpuset io memory pids
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To verify it has been done correctly, logout and login with the user and execute:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enable Libvirt rw socket on RHEL9</title>
      <link>https://iranzo.io/tips/rhel9-libvirtd/</link>
      <pubDate>Thu, 12 Jan 2023 14:32:50 +0000</pubDate>
      <guid>https://iranzo.io/tips/rhel9-libvirtd/</guid>
      <description>&lt;p&gt;RHEL9 by default uses read-only socket which is not usable by some tools like &lt;a href=&#34;../../tags/kcli/&#34;&gt;Kcli&lt;/a&gt;&amp;hellip; to enable it use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable --now libvirtd.socket libvirtd-ro.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop libvirtd.service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable --now virtproxyd.socket virtproxyd-ro.socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl stop virtproxyd.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>[python] Generate ranges from items</title>
      <link>https://iranzo.io/blog/2022/11/25/python-generate-ranges-from-items/</link>
      <pubDate>Fri, 25 Nov 2022 07:00:46 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/11/25/python-generate-ranges-from-items/</guid>
      <description>&lt;p&gt;Some years ago, I added a script for updating headers for &lt;code&gt;(C)&lt;/code&gt; in the python files I was developing for &lt;a href=&#34;../../tags/risu/&#34;&gt;Risu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this way, the header got the list of authors and years working on the files updated automatically.&lt;/p&gt;
&lt;p&gt;With the pass of the years, the list started to became a bit too long, so I worked on creating code for getting ranges instead.&lt;/p&gt;
&lt;p&gt;This is the code I used:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getranges&lt;/span&gt;(data):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    From list of strings representing numbers, get ranges and return list of strings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :param data: list of strings representing numbers
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    :return: list of strings with number ranges when &amp;gt; 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Convert to integers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [int(i) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; data:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Prepare iteration loop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    idata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iter(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; next(idata)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; first
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Process next item&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; following &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; idata:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; following &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; prev &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Years are continuum, just update previous&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; following
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Years are not continuum, end range and start again&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;# Only one item in difference, append items individually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(prev)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (first, prev))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; following
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Catchall for regular execution or last remaining range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; first &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; prev:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Only one item in difference, append items individually&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(first)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(prev)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (first, prev))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Convert back to text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [str(i) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; result]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With it, previous headers like:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automate code build and deployment with ansible</title>
      <link>https://iranzo.io/blog/2022/11/09/automate-code-build-and-deployment-with-ansible/</link>
      <pubDate>Wed, 09 Nov 2022 07:00:46 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/11/09/automate-code-build-and-deployment-with-ansible/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s say that we want to keep our system updated with some code which is not distributed as a regular package, but as a code in a repository (which unfortunately, it&amp;rsquo;s a pretty common situation).&lt;/p&gt;
&lt;p&gt;As a part of the ansible playbooks used for the hosts, I can add a snippet like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;gitrepos&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/myrepo/repo.git&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;tag&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tagtocheckout&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;folder&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/path-for-check-out&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;chdir&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subdir to enter&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;build&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;make build&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;exec&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build/mybuiltbinary&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this definition in the host inventory, we can then in our playbook to perform several steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenShift&#39;s oc debug and parallel execution</title>
      <link>https://iranzo.io/blog/2022/11/03/openshifts-oc-debug-and-parallel-execution/</link>
      <pubDate>Thu, 03 Nov 2022 14:13:32 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/11/03/openshifts-oc-debug-and-parallel-execution/</guid>
      <description>&lt;p&gt;A colleague reported some issues in the OpenShift troubleshooting and diagnosis scripts at &lt;a href=&#34;https://github.com/RHsyseng/openshift-checks/&#34;&gt;OpenShift-checks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some time ago I did contribute some changes to use functions and allow using the &lt;a href=&#34;https://github.com/risuorg/risu&#34;&gt;RISU&lt;/a&gt; wrapper to the scripts, helping consuming the results via RISU&amp;rsquo;s HTML interface.&lt;/p&gt;
&lt;p&gt;As my colleague reported, for some plugins, the output of the command was not shown in the HTML Interface.&lt;/p&gt;
&lt;p&gt;After some investigation, it was found that parallel execution for the plugins was causing no output to be shown, but when filtering to individual ones via &lt;code&gt;risu -i XXXXXXX/plugin -l&lt;/code&gt; it was working fine&amp;hellip; the problem was not the check itself, as both of them worked fine when executed individually but failed when executing them together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Book] Red Hat Enterprise Linux 9 Administration</title>
      <link>https://iranzo.io/blog/2022/10/12/book-red-hat-enterprise-linux-9-administration/</link>
      <pubDate>Wed, 12 Oct 2022 12:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2022/10/12/book-red-hat-enterprise-linux-9-administration/</guid>
      <description>RHEL9 System Administration book now available!</description>
    </item>
    <item>
      <title>Setup a Quay mirror for offline installations with mirror-registry</title>
      <link>https://iranzo.io/blog/2022/08/19/setup-a-quay-mirror-for-offline-installations-with-mirror-registry/</link>
      <pubDate>Fri, 19 Aug 2022 10:00:35 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/08/19/setup-a-quay-mirror-for-offline-installations-with-mirror-registry/</guid>
      <description>Learn on how to use mirror-registry to create a local copy that can be used to install OpenShift without external Internet connectivity.</description>
    </item>
    <item>
      <title>RHCE and RHCSA tips and tricks</title>
      <link>https://iranzo.io/blog/2022/07/13/rhce-and-rhcsa-tips-and-tricks/</link>
      <pubDate>Wed, 13 Jul 2022 21:00:35 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/07/13/rhce-and-rhcsa-tips-and-tricks/</guid>
      <description>&lt;p&gt;I did the RHCE exam some time ago, and still there are some tricks and
advices I tell the people to bear in mind some of the things I used and that were also provided in the &lt;a href=&#34;https://s.admins.guru/buyonamazon&#34;&gt;Red Hat Enterprise 8 Administration&lt;/a&gt; book:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t remember every step, it&amp;rsquo;s not effective, for example as I don&amp;rsquo;t recall syntax for BIND, I do remember package that has some files with examples and I use that one to check what I need to do&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;mlocate&lt;/code&gt; and run &lt;code&gt;updatedb&lt;/code&gt; as soon as you start, then you can use &lt;code&gt;locate &amp;lt;file&amp;gt;&lt;/code&gt; to find out files in your system&lt;/li&gt;
&lt;li&gt;Use your preferred editor&amp;hellip; it&amp;rsquo;s common to use &lt;code&gt;vi&lt;/code&gt; or &lt;code&gt;vim&lt;/code&gt; as it&amp;rsquo;s pretty standard, but if you&amp;rsquo;re used to another, make yourself comfortable in the system.&lt;/li&gt;
&lt;li&gt;As one instructor like to say: &amp;ldquo;Anyone with unlimited amount of time will be able to pass the exam&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;RHCE is a performance-based exam, that means that you need to cover all the required goals within the exam duration, and in the end, the goals is to accomplish, not to do in the &lt;code&gt;smarter&lt;/code&gt; way.
&lt;ul&gt;
&lt;li&gt;For example, if you&amp;rsquo;re told to configure &lt;code&gt;resolv.conf&lt;/code&gt; you can either use &lt;code&gt;nmcli&lt;/code&gt; to modify the settings or you can pipe the results to it via &lt;code&gt;echo nameserver 1.1.1.1 &amp;gt; /etc/resolv.conf&lt;/code&gt;, in the end, both will have the same effect, and of course, using &lt;code&gt;nmcli&lt;/code&gt; will be smarter when you&amp;rsquo;re keeping multiple systems and using automation&amp;hellip; but for the exam, the goal is to focus on the fastest path to master at it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find more tricks at &lt;a href=&#34;https://s.admins.guru/buyonamazon&#34;&gt;Red Hat Enterprise 8 Administration&lt;/a&gt;
&lt;p&gt;
Enjoy! (and if you do, you can
&lt;a href=&#34;https://ko-fi.com/I2I4KDA0V&#34; target=&#34;_blank&#34;&gt;
  &lt;img src=&#34;https://storage.ko-fi.com/cdn/brandasset/kofi_s_logo_nolabel.png&#34; height=&#39;36&#39; style=&#39;border:0px;height:36px;vertical-align:middle;display:inline-block;&#39; border=&#34;0&#34;&gt;
&lt;/img&gt;
Buy Me a Coffee
&lt;/a&gt;
)
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unsupported upgrade for RHEL-based distributions without reinstallation</title>
      <link>https://iranzo.io/blog/2022/04/23/unsupported-upgrade-for-rhel-based-distributions-without-reinstallation/</link>
      <pubDate>Sat, 23 Apr 2022 21:23:48 +0000</pubDate>
      <guid>https://iranzo.io/blog/2022/04/23/unsupported-upgrade-for-rhel-based-distributions-without-reinstallation/</guid>
      <description>&lt;p&gt;Most systems, based on RHEL, were not able to upgrade without
reinstallation, or best said, not supported. The new version, that was
released at around 18 months later contained so many changes that it was
hard to test the upgrades themselves until &lt;code&gt;leapp&lt;/code&gt; was introduced.&lt;/p&gt;
&lt;p&gt;Check the lifecycle here: &lt;a href=&#34;https://access.redhat.com/support/policy/updates/errata&#34;&gt;https://access.redhat.com/support/policy/updates/errata&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, the biggest problem could be the incompatibility of packages or
package formats&amp;hellip; but as usually there were some middle layers it was
possible to upgrade without reinstallation by performing some manual steps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>In action...@redken_bot with examples</title>
      <link>https://iranzo.io/blog/2022/01/20/in-action...@redken_bot-with-examples/</link>
      <pubDate>Thu, 20 Jan 2022 17:20:14 +0100</pubDate>
      <guid>https://iranzo.io/blog/2022/01/20/in-action...@redken_bot-with-examples/</guid>
      <description>See how to use @redken_bot in Telegram or discord with some examples!</description>
    </item>
    <item>
      <title>LDAP query from Python</title>
      <link>https://iranzo.io/blog/2021/10/19/ldap-query-from-python/</link>
      <pubDate>Tue, 19 Oct 2021 22:34:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/10/19/ldap-query-from-python/</guid>
      <description>This article describes how to use python to bind against an LDAP server and perform queries</description>
    </item>
    <item>
      <title>How to stake on NYM Validator 🐳🐳🐳</title>
      <link>https://iranzo.io/blog/2021/09/28/how-to-stake-on-nym-validator/</link>
      <pubDate>Tue, 28 Sep 2021 17:20:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/09/28/how-to-stake-on-nym-validator/</guid>
      <description>This article describes how to stake your token against a NYM cosmos validator</description>
    </item>
    <item>
      <title>The experience of writing a book</title>
      <link>https://iranzo.io/blog/2021/09/15/the-experience-of-writing-a-book/</link>
      <pubDate>Wed, 15 Sep 2021 00:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2021/09/15/the-experience-of-writing-a-book/</guid>
      <description>&lt;p&gt;I wanted to write about my experience (before I forget about it), and as some colleagues asked about it&amp;hellip; here we go&amp;hellip;&lt;/p&gt;
&lt;p&gt;As published in the blog entry &lt;a href=&#34;../../blog/2021/09/11/book-red-hat-enterprise-linux-8-administration/&#34;&gt;RHEL8 Administration book&lt;/a&gt;, some colleagues and I wrote a book on RHEL8 administration, which can be bought &lt;a href=&#34;https://s.iranzo.io/rhel8&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Many years ago I started one about Linux, but every time a new paragraph was added, a lot of new &amp;lsquo;TO-DO&amp;rsquo; items were appended as the information growth&amp;hellip; and as it was a &amp;lsquo;solo&amp;rsquo; project, I had other stuff to work on and was parked.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Book] Red Hat Enterprise Linux 8 Administration</title>
      <link>https://iranzo.io/blog/2021/09/11/book-red-hat-enterprise-linux-8-administration/</link>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2021/09/11/book-red-hat-enterprise-linux-8-administration/</guid>
      <description>RHEL8 System Administration book now available!</description>
    </item>
    <item>
      <title>imapfilter for Gmail</title>
      <link>https://iranzo.io/blog/2021/07/07/imapfilter-for-gmail/</link>
      <pubDate>Wed, 07 Jul 2021 22:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/07/07/imapfilter-for-gmail/</guid>
      <description>Learn on how to use imapfilter against Gmail for classifying the messages</description>
    </item>
    <item>
      <title>UEFI boot order change</title>
      <link>https://iranzo.io/blog/2021/07/01/uefi-boot-order-change/</link>
      <pubDate>Thu, 01 Jul 2021 22:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/07/01/uefi-boot-order-change/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;In case you&amp;rsquo;ve a dual boot machine, sometimes it might happen that &lt;code&gt;grub&lt;/code&gt; menu is no longer appearing.&lt;/p&gt;
&lt;p&gt;For systems using regular BIOS, a &lt;code&gt;grub-install&lt;/code&gt; against the device it was installed might be required, but when using UEFI, it&amp;rsquo;s really easy to use a rescue media and execute &lt;code&gt;efibootmgr&lt;/code&gt; to alter the boot order.&lt;/p&gt;
&lt;p&gt;When executing &lt;code&gt;efibootmgr&lt;/code&gt;, it might output some information like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BootCurrent: &lt;span style=&#34;color:#ae81ff&#34;&gt;0001&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BootOrder: 0001,0019,001D,001C,0017,0018,001A,001B,001E,001F,0020,0000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0000* Windows Boot Manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0001* Fedora
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0010  Setup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0011  Boot Menu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0012  Diagnostic Splash Screen
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0013  Lenovo Diagnostics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0014  Startup Interrupt Menu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0015  Rescue and Recovery
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0016  MEBx Hot Key
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0017* USB CD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0018* USB FDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0019* NVMe0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001A* NVMe1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001B* ATA HDD2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001C* ATA HDD3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001D* ATA HDD0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001E* ATA HDD1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot001F* USB HDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0020* PCI LAN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0021* IDER BOOT CDROM
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0022* IDER BOOT Floppy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0023* ATA HDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Boot0024* ATAPI CD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note there, the &lt;code&gt;BootCurrent&lt;/code&gt; and the &lt;code&gt;BootOrder&lt;/code&gt;, the numbers in the &lt;code&gt;BootOrder&lt;/code&gt; correspond to the &lt;code&gt;Boot####&lt;/code&gt; that are listed below it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redken machine learning for spam detection</title>
      <link>https://iranzo.io/blog/2021/06/24/redken-machine-learning-for-spam-detection/</link>
      <pubDate>Thu, 24 Jun 2021 22:00:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/06/24/redken-machine-learning-for-spam-detection/</guid>
      <description>&lt;p&gt;For some of the telegram groups I&amp;rsquo;m in, I&amp;rsquo;ve been detecting users that after some period of time, just publish spam messages of any topic.&lt;/p&gt;
&lt;p&gt;There are many bots for controlling when a user joins, by showing a CAPTCHA that user must resolve (either clicking a button, answering a mathematical operation, inputting a CAPTCHA image text, etc).&lt;/p&gt;
&lt;p&gt;Some time ago, a colleague was using Machine Learning and I wanted to have a look at it and it would make a good feature to implement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Geo replication with syncthing</title>
      <link>https://iranzo.io/blog/2021/06/12/geo-replication-with-syncthing/</link>
      <pubDate>Sat, 12 Jun 2021 21:40:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/06/12/geo-replication-with-syncthing/</guid>
      <description>&lt;p&gt;Some years ago I started using geo replication to keep a copy of all the pictures, docs, etc&lt;/p&gt;
&lt;p&gt;After being using BitTorrent sync and later resilio sync (even if I didn&amp;rsquo;t fully liked the idea of it being not open source), I gave up. My NAS with 16 GB of ram, even if a bit older (HP N54L), seemed not to have enough memory to run it, and was constantly swapping.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to check if a system is virtual</title>
      <link>https://iranzo.io/blog/2021/05/10/how-to-check-if-a-system-is-virtual/</link>
      <pubDate>Mon, 10 May 2021 14:30:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/05/10/how-to-check-if-a-system-is-virtual/</guid>
      <description>&lt;p&gt;I was improving a playbook in Ansible and wanted to find a way to find if a system was virtual or not to decide about some tunning like setting &lt;code&gt;tuned-adm profile virtual-guest&lt;/code&gt; or disable the power off when the lid is closed.&lt;/p&gt;
&lt;p&gt;After some research and try-except situations I got to this one that seemed to work (I had to tune it as one desktop machine was missing the /sys entry I was using before):&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to run a NYM Validator</title>
      <link>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-validator/</link>
      <pubDate>Sun, 09 May 2021 12:40:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-validator/</guid>
      <description>&lt;p&gt;As said in the article about &lt;a href=&#34;../../blog/2021/05/09/how-to-run-a-nym-mixnode/&#34;&gt;mixnodes&lt;/a&gt;, NYM is a technology aiming for providing privacy for the communications.&lt;/p&gt;
&lt;p&gt;Apart of the mixnodes, other key piece in the infrastructure are the validators.&lt;/p&gt;
&lt;p&gt;As said, the project uses Open Source technology to run, and they have a nice docs with details on how to run a node at &lt;a href=&#34;https://nymtech.net/docs/&#34;&gt;https://nymtech.net/docs/&lt;/a&gt;, and the one relevant for mixnodes at &lt;a href=&#34;https://nymtech.net/docs/run-nym-nodes/validators/&#34;&gt;https://nymtech.net/docs/run-nym-nodes/validators/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this case, we can follow the instructions for compiling, but I faced some issues (compiling went fine, but initial sync failed), so in this case, we will use the pre-compiled version provided with the &lt;code&gt;0.10.0&lt;/code&gt; release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to run a NYM mixnode</title>
      <link>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-mixnode/</link>
      <pubDate>Sun, 09 May 2021 12:30:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2021/05/09/how-to-run-a-nym-mixnode/</guid>
      <description>&lt;p&gt;Some time ago I&amp;rsquo;ve started running a NYM mixnode. &lt;code&gt;NYM&lt;/code&gt; is a project that targets improving privacy by decomposing network packages from different hosts, so that origin and target cannot be traced.&lt;/p&gt;
&lt;p&gt;You can check more about the NYM project at their site at &lt;a href=&#34;https://nymtech.net/&#34;&gt;https://nymtech.net/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The project uses Open Source technology to run, and they have a nice docs with details on how to run a node at &lt;a href=&#34;https://nymtech.net/docs/&#34;&gt;https://nymtech.net/docs/&lt;/a&gt;, and the one relevant for mixnodes at &lt;a href=&#34;https://nymtech.net/docs/run-nym-nodes/mixnodes/&#34;&gt;https://nymtech.net/docs/run-nym-nodes/mixnodes/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Be lazy, automate: GitHub actions for static blogging</title>
      <link>https://iranzo.io/presentations/2021-01-14-be-lazy-automate-gha-for-static-blogging/2021-01-14-be-lazy-automate-gha-for-static-blogging/</link>
      <pubDate>Thu, 14 Jan 2021 22:24:00 +0100</pubDate>
      <guid>https://iranzo.io/presentations/2021-01-14-be-lazy-automate-gha-for-static-blogging/2021-01-14-be-lazy-automate-gha-for-static-blogging/</guid>
      <description>&lt;h2 id=&#34;be-lazy-automate-github-actions-for-static-blogging&#34;&gt;Be lazy, automate: GitHub Actions for static blogging&lt;/h2&gt;
&lt;p&gt;/me: Pablo Iranzo Gómez ( &lt;a href=&#34;https://iranzo.io&#34;&gt;https://iranzo.io&lt;/a&gt; )&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-a-blog&#34;&gt;What is a blog?&lt;/h2&gt;
&lt;p&gt;A place to share knowledge, interests, tips, etc.&lt;/p&gt;
&lt;p&gt;Usually features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;images&lt;/li&gt;
&lt;li&gt;comments from visitors,&lt;/li&gt;
&lt;li&gt;related articles,&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-are-the-costs-for-a-blog&#34;&gt;What are the costs for a blog?&lt;/h2&gt;
&lt;p&gt;Web costs money:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hosting&lt;/li&gt;
&lt;li&gt;Domain&lt;/li&gt;
&lt;li&gt;Maintenance&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-static-blogging&#34;&gt;What is static blogging?&lt;/h2&gt;
&lt;p&gt;Generate a static webpage&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Think of it as rendering templates into HTML&lt;/li&gt;
&lt;li&gt;Has no requirements on the web server, any simple Webserver is enough:
&lt;ul&gt;
&lt;li&gt;Look ma!, no database!&lt;/li&gt;
&lt;li&gt;Look ma!, no users!&lt;/li&gt;
&lt;li&gt;Look ma!, no security issues!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-does-it-mean-to-us&#34;&gt;What does it mean to us?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We write an article&lt;/li&gt;
&lt;li&gt;Command for generating html from templates is used&lt;/li&gt;
&lt;li&gt;New files uploaded to Webserver&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;some-philosophy&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=cJMwBwFj5nQ&#34;&gt;Some Philosophy&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Empty your mind, be shapeless, formless, like water.
Now you put water in a cup, it becomes the cup, you put water into a bottle, it becomes the bottle
You put water in a teacup, it becomes the teapot
Now water can flow or it can crash.
Be water my friend&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring OpenShift with self-contained NTP</title>
      <link>https://iranzo.io/blog/2020/12/07/configuring-openshift-with-self-contained-ntp/</link>
      <pubDate>Mon, 07 Dec 2020 14:10:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/12/07/configuring-openshift-with-self-contained-ntp/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In a regular OpenShift environment, NTP server is more less like this:


  


&lt;figure&gt;
  &lt;img
    src=&#39;https://g.gravizo.com/svg?%0a%0a%20%20%20%20%20%20digraph%20connected%20%7b%0a%20%20%20%20%20%20%20%20%20%20%2f%2f%20title%0a%20%20%20%20%20%20%20%20%20%20labelloc%3d%22t%22%3b%0a%20%20%20%20%20%20%20%20%20%20label%3d%22Connected%20Cluster%22%3b%0a%20%20%20%20%20%20%20%20%20%20node%20%5bshape%20%3d%20circle%5d%3b%0a%20%20%20%20%20%20%20%20%20%20%7b%20rank%20%3d%20same%3b%20%22External%20NTP%20Server%22%3b%7d%0a%20%20%20%20%20%20%20%20%20%20%7b%20rank%20%3d%20same%3b%20%22Master%201%22%3b%20%22Master%202%22%3b%20%22Master%203%22%7d%0a%20%20%20%20%20%20%20%20%20%20%7b%20rank%20%3d%20same%3b%20%22Worker%201%22%3b%20%22Worker%202%22%3b%20%22Worker%203%22%7d%0a%20%20%20%20%20%20%20%20%20%20%22Master%201%22%20-%3e%20%22External%20NTP%20Server%22%20%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Master%202%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Master%203%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Worker%201%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Worker%202%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%20%20%20%20%20%20%22Worker%203%22%20-%3e%20%22External%20NTP%20Server%22%5bcolor%3dred%5d%0a%20%20%20%20%7d%0a%0a&#39;
    alt=&#39;Diagram&#39;
    /&gt;
    &lt;figcaption&gt;Diagram&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In a self-contained cluster with no connection to external networks NTP server is not reachable, but a reachable NTP server is required for proper cluster synchronization.
Cluster does use SSL certificates that require validation and might fail if the dates between the systems are not in sync or at least pretty close in time.&lt;/p&gt;


  


&lt;figure&gt;
  &lt;img
    src=&#39;https://g.gravizo.com/svg?%0adigraph%20disconnected%20%7b%0a%2f%2f%20title%0alabelloc%3d%22t%22%3b%0alabel%3d%22Disconnected%20Cluster%22%3b%0anode%20%5bshape%20%3d%20circle%5d%3b%0a%7b%20rank%20%3d%20same%3b%20%22Master%201%22%3b%20%22Master%202%22%3b%20%22Master%203%22%7d%0a%7b%20rank%20%3d%20same%3b%20%22Worker%201%22%3b%20%22Worker%202%22%3b%20%22Worker%203%22%7d%0a%22Master%201%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Master%201%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%22Master%202%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Master%202%22%20-%3e%20%22Master%203%22%5bcolor%3d%22green%22%5d%0a%22Master%203%22%20-%3e%20%22Master%201%22%5bcolor%3d%22purple%22%5d%0a%22Master%203%22%20-%3e%20%22Master%202%22%5bcolor%3d%22red%22%5d%0a%22Worker%201%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Worker%201%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Worker%201%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%22Worker%202%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Worker%202%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Worker%202%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%22Worker%203%22%20-%3e%20%22Master%201%22%20%5bcolor%3d%22purple%22%5d%0a%22Worker%203%22%20-%3e%20%22Master%202%22%20%5bcolor%3d%22red%22%5d%0a%22Worker%203%22%20-%3e%20%22Master%203%22%20%5bcolor%3d%22green%22%5d%0a%7d%0a&#39;
    alt=&#39;Diagram&#39;
    /&gt;
    &lt;figcaption&gt;Diagram&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We&amp;rsquo;ve several components already available in our OpenShift cluster that are very useful:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upstream/Downstream documentation workflow</title>
      <link>https://iranzo.io/blog/2020/12/01/upstream/downstream-documentation-workflow/</link>
      <pubDate>Tue, 01 Dec 2020 14:10:34 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/12/01/upstream/downstream-documentation-workflow/</guid>
      <description>&lt;p&gt;During last year I&amp;rsquo;ve worked with the &lt;a href=&#34;https://github.com/openshift-kni/baremetal-deploy/&#34;&gt;https://github.com/openshift-kni/baremetal-deploy/&lt;/a&gt; repository after being working in the KNI Community team that was in charge of &amp;lt;KubeVirt.io&amp;gt; and &amp;lt;Metal3.io&amp;gt; where some of the below things were applied.&lt;/p&gt;
&lt;p&gt;One of the goals we had was to streamline the upstream &amp;lt;-&amp;gt; downstream process to keep changes done in the right way: get changes upstream and copy over downstream with minimal changes.&lt;/p&gt;
&lt;p&gt;We ended up using AsciiDoctor for building the documentation in the same way it&amp;rsquo;s done downstream so it&amp;rsquo;s just a matter of copying over the modules.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dell racadm remote ISO load</title>
      <link>https://iranzo.io/blog/2020/05/12/dell-racadm-remote-iso-load/</link>
      <pubDate>Tue, 12 May 2020 13:30:24 +0200</pubDate>
      <guid>https://iranzo.io/blog/2020/05/12/dell-racadm-remote-iso-load/</guid>
      <description>&lt;p&gt;In order to test IPv6 deployment on Dell hardware I was in need to patch the servers to ensure that UEFI boot mode is in use.&lt;/p&gt;
&lt;p&gt;Normally I would had use the DSU that runs from within Linux, but as the servers are part of an OpenShift installation (using &lt;a href=&#34;https://github.com/openshift-kni/baremetal-deploy&#34;&gt;baremetal-deploy&lt;/a&gt;) and using CoreOS as the underlying system I wanted to load ISO from HTTP server on the &lt;code&gt;deployhost&lt;/code&gt; (running RHEL).&lt;/p&gt;
&lt;p&gt;The command is not that hard, let&amp;rsquo;s first define some variables:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Language detection in @redken_bot</title>
      <link>https://iranzo.io/blog/2020/03/25/language-detection-in-@redken_bot/</link>
      <pubDate>Wed, 25 Mar 2020 20:00:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/03/25/language-detection-in-@redken_bot/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Before the move to Python3, &lt;a href=&#34;https://t.me/redken_bot&#34;&gt;redken&lt;/a&gt; had per-group language configuration by using i18n, with the upgrade/rewrite of Python3 code there were some issues and I had to remove the support, defaulting everything to English (most of the outputs where already in English so not a great loss).&lt;/p&gt;
&lt;p&gt;On another side, having to manually configure each channel could be problematic as most users just add the bot to their groups but don&amp;rsquo;t care about other settings that might be useful like &lt;code&gt;welcome&lt;/code&gt; message, &lt;code&gt;inactivity&lt;/code&gt; for kicking out inactive users, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yaspeller hook for pre-commit</title>
      <link>https://iranzo.io/blog/2020/03/12/yaspeller-hook-for-pre-commit/</link>
      <pubDate>Thu, 12 Mar 2020 14:38:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/03/12/yaspeller-hook-for-pre-commit/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve made a PR that got merged into Yaspeller repository which adds support for &lt;code&gt;pre-commit&lt;/code&gt; to spell check your files.&lt;/p&gt;
&lt;p&gt;It requires simple configuration, just add this snippet to your &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;repo&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://github.com/hcodes/yaspeller.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;rev&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;hooks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;yaspeller&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;files&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\.en\\.md&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The plugin will then initialize and spell check your files via &lt;code&gt;yaspeller&lt;/code&gt;. It will use the standard &lt;code&gt;.yaspeller.json&lt;/code&gt; file for dictionary and settings and automate it for each new commit you work on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git commit reordering</title>
      <link>https://iranzo.io/blog/2020/02/13/git-commit-reordering/</link>
      <pubDate>Thu, 13 Feb 2020 20:30:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/02/13/git-commit-reordering/</guid>
      <description>&lt;p&gt;While I was working for a presentation for kid&amp;rsquo;s school at &lt;a href=&#34;%22campo-magnetico-auroras-fases-lunares-cohetes.md%22&#34;&gt;Magnetic field, Aurora, Lunar Phases and Rockets&lt;/a&gt;, I added 4 big videos to the presentation (as I was going to use them offline while presenting).&lt;/p&gt;
&lt;p&gt;I know what git is not the place for big binary files, and even Github proposed to use the LFS backend for that, but as it was just temporary, I went ahead.&lt;/p&gt;
&lt;p&gt;After that commit, I also wrote two more articles, the one on &lt;a href=&#34;../../blog/2020/02/08/lego-speed-champions-2020-review/&#34;&gt;Lego Speed Champions&lt;/a&gt; and the one on &lt;a href=&#34;../../blog/2020/02/12/galleria.io-and-photoswipe/&#34;&gt;Galleria.io and PhotoSwipe&lt;/a&gt;, so it became a problem to have big files in between, when my plan was to remove them in the end.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Galleria.io and PhotoSwipe</title>
      <link>https://iranzo.io/blog/2020/02/12/galleria.io-and-photoswipe/</link>
      <pubDate>Wed, 12 Feb 2020 07:30:24 +0100</pubDate>
      <guid>https://iranzo.io/blog/2020/02/12/galleria.io-and-photoswipe/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I was looking for an alternative for my (this) blog and hold pictures. I&amp;rsquo;m a lego fan so I wanted to get some pictures uploaded but without bloating the site.&lt;/p&gt;
&lt;p&gt;In the article &lt;a href=&#34;../../blog/2019/06/09/lego-75894-1967-mini-cooper-s-rally-and-buggy-moc-adaptation-as-mini-transporter/&#34;&gt;Lego Mini Cooper MOC&lt;/a&gt; I did add lot of pictures, same for &lt;a href=&#34;../../blog/2019/06/28/lego-80101-chinese-new-years-eve/&#34;&gt;Lego Chinese dinner&lt;/a&gt; and &lt;a href=&#34;../../blog/2019/06/28/lego-80102-dragon-dance/&#34;&gt;Lego Dragon Dance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was checking and how telegram does handle some links and found that
Instagram &amp;rsquo;links&amp;rsquo; get expanded to list the images inside directly to see if that could help in a task I was helping at &lt;a href=&#34;https://github.com/Pelican-Elegant/elegant&#34;&gt;Pelican-Elegant theme&lt;/a&gt; used at this site for creating a gallery.&lt;/p&gt;</description>
    </item>
    <item>
      <title>API access for Google Calendar and Google Sheet access</title>
      <link>https://iranzo.io/blog/2019/11/28/api-access-for-google-calendar-and-google-sheet-access/</link>
      <pubDate>Thu, 28 Nov 2019 17:11:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/11/28/api-access-for-google-calendar-and-google-sheet-access/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;During last days I&amp;rsquo;ve been playing around with python and API access to Google Sheets.&lt;/p&gt;
&lt;p&gt;Since some time ago, I already experimented with ICS parsing from python because added &lt;a href=&#34;https://t.me/redken_bot&#34;&gt;https://t.me/redken_bot&lt;/a&gt; access to calendar files (&lt;code&gt;.ics&lt;/code&gt;) so that it can provide daily reminders on chats about the events happening for the specific date, and had the chance to propose it&amp;rsquo;s usage to cover a specific use case: Accessing a spreadsheet in Google Sheets and parse its contents and output an ICS file so that the events listed and the dates specific for each one are available in an easier-to-consume approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Killercoda scenario redirection</title>
      <link>https://iranzo.io/blog/2019/07/31/killercoda-scenario-redirection/</link>
      <pubDate>Wed, 31 Jul 2019 07:39:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/07/31/killercoda-scenario-redirection/</guid>
      <description>&lt;p&gt;After my post about &lt;a href=&#34;../../blog/2019/06/11/killercoda-scenario-creation/&#34;&gt;killercoda&lt;/a&gt;, I did split my initial scenarios into &amp;lsquo;organizations&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;One of them, is in progress to get contributed upstream to &lt;a href=&#34;https://killercoda.com/kubevirt&#34;&gt;KubeVirt project killercoda&lt;/a&gt; (still getting some reviews to land on final repo), and the other is under &lt;a href=&#34;https://killercoda.com/citellus&#34;&gt;Citellus organization&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the goal was not to lose visits using the prior links, I contacted the team behind killercoda Support (thanks a lot Ben!!) and the requirements to get a &amp;lsquo;redirect&amp;rsquo; in place is to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Killercoda scenario creation</title>
      <link>https://iranzo.io/blog/2019/06/11/killercoda-scenario-creation/</link>
      <pubDate>Tue, 11 Jun 2019 21:16:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/06/11/killercoda-scenario-creation/</guid>
      <description>&lt;p&gt;After some time checking the scenarios at &lt;a href=&#34;https://learn.openshift.com&#34;&gt;https://learn.openshift.com&lt;/a&gt;, I decided to give it a try.&lt;/p&gt;
&lt;p&gt;With the help of &lt;a href=&#34;https://linuxera.org&#34;&gt;Mario Vázquez&lt;/a&gt;, author of &lt;a href=&#34;https://learn.openshift.com/introduction/federated-clusters/&#34;&gt;Getting Started with Kubefed&lt;/a&gt;, I did create two scenarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://killercoda.com/citellus/citellus&#34;&gt;How to use Citellus&lt;/a&gt; on &lt;a href=&#34;https://risuorg.github.io&#34;&gt;Citellus: Troubleshooting automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://killercoda.com/iranzo/kubevirt&#34;&gt;KubeVirt&lt;/a&gt; on a &amp;lsquo;browser-based&amp;rsquo; approach for &lt;a href=&#34;https://kubevirt.io/quickstart_minikube/&#34;&gt;MiniKube&lt;/a&gt; setup for validating KubeVirt: Kubernetes with VM Virtualization (versus the regular containers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check how them can be created by looking at their code at: &lt;a href=&#34;https://github.com/iranzo/katacoda-scenarios&#34;&gt;killercoda Scenarios&lt;/a&gt; or the &amp;lsquo;playable&amp;rsquo; version at &lt;a href=&#34;https://killercoda.com/iranzo/&#34;&gt;https://killercoda.com/iranzo/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use custom domain name with Blog-O-Matic</title>
      <link>https://iranzo.io/blog/2019/05/16/use-custom-domain-name-with-blog-o-matic/</link>
      <pubDate>Thu, 16 May 2019 22:29:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2019/05/16/use-custom-domain-name-with-blog-o-matic/</guid>
      <description>&lt;p&gt;As a recipe, if you want to enable a custom domain name on &lt;a href=&#34;../../blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./&#34;&gt;blog-o-matic&lt;/a&gt; a special file needs to be created on the &amp;lsquo;GitHub Pages&amp;rsquo; served &amp;lsquo;master&amp;rsquo; branch.&lt;/p&gt;
&lt;p&gt;In order to do so, edit &lt;code&gt;pelicanconf.py&lt;/code&gt; and add the following differences:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;diff --git a/pelicanconf.py b/pelicanconf.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;index 680abcb..fc3dd8f 100644
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--- a/pelicanconf.py
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ b/pelicanconf.py
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -46,13 +46,16 @@ AMAZON_ONELINK = &amp;#34;b63a2115-85f7-43a9-b169-5f4c8c275655&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; # Extra files customization
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-EXTRA_PATH_METADATA = {}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+EXTRA_PATH_METADATA = {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+    &amp;#39;extra/CNAME&amp;#39;: {&amp;#39;path&amp;#39;: &amp;#39;CNAME&amp;#39;},
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; EXTRA_TEMPLATES_PATHS = [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &amp;#34;plugins/revealmd/templates&amp;#34;,  # eg: &amp;#34;plugins/revealmd/templates&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-STATIC_PATHS = [ &amp;#39;images&amp;#39; ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+STATIC_PATHS = [ &amp;#39;images&amp;#39; , &amp;#39;extra&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ## ONLY TOUCH IF YOU KNOW WHAT YOU&amp;#39;RE DOING!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will copy the &lt;code&gt;CNAME&lt;/code&gt; file created in &lt;code&gt;content/extra/CNAME&lt;/code&gt; to the resulting &amp;lsquo;master&amp;rsquo; branch as &lt;code&gt;/CNAME&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>@redken_bot</title>
      <link>https://iranzo.io/redken_bot/</link>
      <pubDate>Mon, 04 Mar 2019 18:34:14 +0100</pubDate>
      <guid>https://iranzo.io/redken_bot/</guid>
      <description>Learn about Redken Telegram Bot usage and configuration settings.</description>
    </item>
    <item>
      <title>Telegram Redken bot documentation</title>
      <link>https://iranzo.io/redkendoc/telegram-redken_bot-documentation/</link>
      <pubDate>Mon, 04 Mar 2019 18:34:14 +0100</pubDate>
      <guid>https://iranzo.io/redkendoc/telegram-redken_bot-documentation/</guid>
      <description>&lt;p&gt;The new document is at &lt;a href=&#34;../../redkendoc/telegram-redken_bot-documentation/&#34;&gt;Redken Documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AwesomeSlides for converting LibreOffice ODP into revealjs</title>
      <link>https://iranzo.io/blog/2019/01/22/awesomeslides-for-converting-libreoffice-odp-into-revealjs/</link>
      <pubDate>Tue, 22 Jan 2019 20:51:27 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/22/awesomeslides-for-converting-libreoffice-odp-into-revealjs/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For some time now, I wanted to put the presentations I did in the past to be available, and since I&amp;rsquo;ve added support to &lt;a href=&#34;../../blog/2019/01/20/fixing-pelican-revealjs-plugin/&#34;&gt;my blog to render revealjs slides&lt;/a&gt;, I wanted to also put other presentations that I did in the past, probably (or for sure) outdated, but that were sitting in my computer drive.&lt;/p&gt;
&lt;p&gt;The presentations already got several transformations, but in the actual status they are stored as LibreOffice ODP files, that made it a bit difficult.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fixing pelican revealjs plugin</title>
      <link>https://iranzo.io/blog/2019/01/20/fixing-pelican-revealjs-plugin/</link>
      <pubDate>Sun, 20 Jan 2019 23:12:17 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/20/fixing-pelican-revealjs-plugin/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;After my recent talk about &lt;a href=&#34;../../blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./&#34;&gt;blog-o-matic&lt;/a&gt;, I was trying to upload somewhere the slides I used.&lt;/p&gt;
&lt;p&gt;Since some time ago I started using Reveal-MD, so I could use Markdown to create and show slides, but wanted also a way to upload them for consumption.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brookskindle/pelican-revealmd/&#34;&gt;Pelican-revealmd plugin&lt;/a&gt; seemed to be the answer.&lt;/p&gt;
&lt;p&gt;It does use pypandoc library and &lt;a href=&#34;https://pandoc.org&#34;&gt;&amp;lsquo;pandoc&amp;rsquo;&lt;/a&gt; for doing the conversion.&lt;/p&gt;
&lt;h2 id=&#34;the-problems-found&#34;&gt;The problems found&lt;/h2&gt;
&lt;p&gt;After some test, it had 3 issues:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Project automation with Travis, GitHub Pages and Quay</title>
      <link>https://iranzo.io/presentations/2019-01-16-automation-travis-ghpages-containers/</link>
      <pubDate>Wed, 16 Jan 2019 16:00:00 +0100</pubDate>
      <guid>https://iranzo.io/presentations/2019-01-16-automation-travis-ghpages-containers/</guid>
      <description>&lt;h2 id=&#34;project-hosting-and-automation&#34;&gt;Project hosting and automation&lt;/h2&gt;
&lt;p&gt;/me: Pablo Iranzo Gómez ( &lt;a href=&#34;https://iranzo.io&#34;&gt;https://iranzo.io&lt;/a&gt; )&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;you-got-a-shinny-new-project-what-now&#34;&gt;You got a shinny new project? What now?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Code usually also requires a webpage&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documentation, General Information, Developer information, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web costs money&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hosting, Domain, Maintenance, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;some-philosophy&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=cJMwBwFj5nQ&#34;&gt;Some Philosophy&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Empty your mind, be shapeless, formless, like water.
Now you put water in a cup, it becomes the cup, you put water into a bottle, it becomes the bottle
You put water in a teacup, it becomes the teapot
Now water can flow or it can crash.
Be water my friend&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blog-o-Matic - quickly get a GitHub hosted blog with Pelican, Elegant with little setup steps.</title>
      <link>https://iranzo.io/blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./</link>
      <pubDate>Wed, 09 Jan 2019 22:00:47 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/09/blog-o-matic-quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps./</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;ve already covered some articles about automation with Travis-CI, GitHub,
and one step that seems a show-stopper for many users when trying to build a
website is on one side, the investment (domain, hosting, etc), the backend
being used (WordPress, static generators, etc)&amp;hellip;&lt;/p&gt;
&lt;p&gt;While preparing a talk for a group of co-workers covering several of those aspects, I came with the idea to create Blog-o-Matic, implementing many of those &amp;rsquo;learnings&amp;rsquo; in a &amp;lsquo;canned&amp;rsquo; way that can be easy to consume by users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSP Director baremetal hypervisor for CoreOS</title>
      <link>https://iranzo.io/blog/2019/01/08/osp-director-baremetal-hypervisor-for-coreos/</link>
      <pubDate>Tue, 08 Jan 2019 17:30:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/08/osp-director-baremetal-hypervisor-for-coreos/</guid>
      <description>&lt;h2 id=&#34;osp-director&#34;&gt;OSP Director&lt;/h2&gt;
&lt;p&gt;OSP Director (or upstream TripleO) is a life-cycle manager for OpenStack based on the idea of using &amp;lsquo;OpenStack&amp;rsquo; to deploy &amp;lsquo;OpenStack&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;To do so, it creates a management &amp;lsquo;Undercloud&amp;rsquo;, that is configured and prepared for later deploying an &amp;lsquo;overcloud&amp;rsquo; which is the one that will later run the workloads.&lt;/p&gt;
&lt;p&gt;TripleO/Director, also automates the inspection of hosts and tagging to the roles they will perform later in the &amp;lsquo;overcloud&amp;rsquo; setup, such as &amp;lsquo;controller&amp;rsquo;, &amp;lsquo;compute&amp;rsquo;, &amp;lsquo;storage&amp;rsquo;, or even mixed roles via &lt;code&gt;composable-roles&lt;/code&gt; support.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postgres repl SSL replication</title>
      <link>https://iranzo.io/blog/2019/01/08/postgres-repl-ssl-replication/</link>
      <pubDate>Tue, 08 Jan 2019 17:30:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/08/postgres-repl-ssl-replication/</guid>
      <description>&lt;h1 id=&#34;postgres-across-clusters&#34;&gt;Postgres across clusters&lt;/h1&gt;
&lt;p&gt;For Postgres to work across clusters we do need to have the data being synchronized.&lt;/p&gt;
&lt;p&gt;With some other databases we do have some master-master approach, but
usually have very strict requirements on latency, bandwidth, etc that we
cannot solve with On-Premise + external cloud providers.&lt;/p&gt;
&lt;p&gt;If the replication is based on the storage level instead, then you face that database servers don’t deal well if the data changes underneath it, so it leads to data corruption, on top of the storage-level issues/requirements as well on bandwidth, latency, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quay for Federation</title>
      <link>https://iranzo.io/blog/2019/01/08/quay-for-federation/</link>
      <pubDate>Tue, 08 Jan 2019 17:30:36 +0100</pubDate>
      <guid>https://iranzo.io/blog/2019/01/08/quay-for-federation/</guid>
      <description>&lt;h2 id=&#34;why-this-article&#34;&gt;Why this article?&lt;/h2&gt;
&lt;p&gt;For Federation of OpenShift/Kubernetes clusters we want not only to demo some applications, but build a solution that covers all that will be needed in a real-world deployment.&lt;/p&gt;
&lt;p&gt;Colleagues in the Solutions Engineering team have been working on
demonstrating an application running on different clusters over a Federated Control Plane, allowing it to &amp;lsquo;roam&amp;rsquo; between clusters with shared data access as a way to demonstrate how an application can &amp;lsquo;scale&amp;rsquo; from on-premise deployment to external clouds in order to satisfy business requirements for peak demands.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Triggering a Travis-CI build on another repo</title>
      <link>https://iranzo.io/blog/2018/12/11/triggering-a-travis-ci-build-on-another-repo/</link>
      <pubDate>Tue, 11 Dec 2018 21:49:47 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/12/11/triggering-a-travis-ci-build-on-another-repo/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;After setting up &lt;a href=&#34;../../blog/2018/12/07/how-to-automate-via-travis-ci-publishing-of-new-pelican-pages-to-github-pages/&#34;&gt;build automation&lt;/a&gt; we also wanted it not to happen only when updating the &lt;code&gt;documentation&lt;/code&gt; repository.&lt;/p&gt;
&lt;p&gt;Besides hosting documentation, Elegant website also serves as a live demo of the current release. This meant, the website should be regenerated and updated every time when a documented is added or edited, and also when Elegant theme is updated.&lt;/p&gt;
&lt;p&gt;Github and Travis doesn&amp;rsquo;t offer dependent builds out of the box, so the trick goes to &amp;lsquo;signal&amp;rsquo; via a github token to trigger a Travis-CI build.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to automate via Travis CI publishing of new pelican pages to GitHub pages</title>
      <link>https://iranzo.io/blog/2018/12/07/how-to-automate-via-travis-ci-publishing-of-new-pelican-pages-to-github-pages/</link>
      <pubDate>Fri, 07 Dec 2018 16:00:47 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/12/07/how-to-automate-via-travis-ci-publishing-of-new-pelican-pages-to-github-pages/</guid>
      <description>&lt;h1 id=&#34;background&#34;&gt;Background&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Pelican-Elegant/elegant&#34;&gt;Elegant&lt;/a&gt; theme for pelican has been undergoing a big change from individual-driven effort to community, as part of this, one of the tasks to accomplish, has been the decoupling from author blog to project site for documentation.&lt;/p&gt;
&lt;p&gt;As we wanted this process to be both automated and allowed us to demonstrate via eat-your-own-dog-food that the theme works and how it looks, the idea was to automate the rendering of Pelican website with new documents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contributing to OSP upstream a.k.a. Peer Review</title>
      <link>https://iranzo.io/blog/2018/10/16/contributing-to-osp-upstream-a.k.a.-peer-review/</link>
      <pubDate>Tue, 16 Oct 2018 07:32:47 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/10/16/contributing-to-osp-upstream-a.k.a.-peer-review/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the article &amp;ldquo;&lt;a href=&#34;../../blog/2016/07/21/contributing-to-openstack/&#34;&gt;Contributing to OpenStack&lt;/a&gt;&amp;rdquo; we did cover on how to prepare accounts and prepare your changes for submission upstream (and even how to find &lt;code&gt;low hanging fruits&lt;/code&gt; to start contributing).&lt;/p&gt;
&lt;p&gt;Here, we&amp;rsquo;ll cover what happens behind the scene to get change published.&lt;/p&gt;
&lt;h2 id=&#34;upstream-workflow&#34;&gt;Upstream workflow&lt;/h2&gt;
&lt;h3 id=&#34;peer-review&#34;&gt;Peer review&lt;/h3&gt;
&lt;p&gt;Upstream contributions to OSP and other projects are based on Peer Review, that means that once a new set of code has been submitted, several steps for validation are required/happen before having it implemented.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Peru for syncing specific git repository files</title>
      <link>https://iranzo.io/blog/2018/09/25/peru-for-syncing-specific-git-repository-files/</link>
      <pubDate>Tue, 25 Sep 2018 22:17:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/09/25/peru-for-syncing-specific-git-repository-files/</guid>
      <description>&lt;h2 id=&#34;peru-a-repository-synchronizer&#34;&gt;Peru a repository synchronizer&lt;/h2&gt;
&lt;p&gt;Some projects upstream &lt;code&gt;bind&lt;/code&gt; together lot of files which might not be of interest, but still the
convenience of a &lt;code&gt;git pull&lt;/code&gt; to get latest updates, makes you to download the whole
repository for just a bunch of files or folders.&lt;/p&gt;
&lt;p&gt;For example, this website uses &lt;a href=&#34;http://getpelican.com/&#34;&gt;Pelican&lt;/a&gt; to generate the webpages out of markdown files. Pelican does have a rich set of &lt;a href=&#34;https://github.com/getpelican/pelican-plugins&#34;&gt;plugins&lt;/a&gt; but all of them are in the same folder in the &lt;code&gt;git checkout&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>First post on Red Hat blog</title>
      <link>https://iranzo.io/blog/2018/06/07/first-post-on-red-hat-blog/</link>
      <pubDate>Thu, 07 Jun 2018 22:32:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/06/07/first-post-on-red-hat-blog/</guid>
      <description>&lt;h2 id=&#34;new-blog-post&#34;&gt;New blog post!&lt;/h2&gt;
&lt;p&gt;After some great help and collaboration from all the colleagues reviewing, suggesting edits, we were able to prepare a blog post on &lt;a href=&#34;https://risuorg.github.io&#34;&gt;Citellus&lt;/a&gt;, the tool we develop as part of our daily work solving cases.&lt;/p&gt;
&lt;p&gt;Check it out at &lt;a href=&#34;https://www.redhat.com/en/blog/citellus-system-configuration-validation-tool?scid=701f2000000tnTlAAI&#34;&gt;Citellus: System configuration validation tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
Enjoy! (and if you do, you can
&lt;a href=&#34;https://ko-fi.com/I2I4KDA0V&#34; target=&#34;_blank&#34;&gt;
  &lt;img src=&#34;https://storage.ko-fi.com/cdn/brandasset/kofi_s_logo_nolabel.png&#34; height=&#39;36&#39; style=&#39;border:0px;height:36px;vertical-align:middle;display:inline-block;&#39; border=&#34;0&#34;&gt;
&lt;/img&gt;
Buy Me a Coffee
&lt;/a&gt;
)
&lt;/p&gt;

&lt;p&gt;Pablo&lt;/p&gt;</description>
    </item>
    <item>
      <title>SuperSEC 2018!</title>
      <link>https://iranzo.io/blog/2018/05/13/supersec-2018/</link>
      <pubDate>Sun, 13 May 2018 10:50:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/05/13/supersec-2018/</guid>
      <description>&lt;h2 id=&#34;presentation-at-supersec-2018&#34;&gt;Presentation at SuperSEC 2018!&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve got a slot at SuperSEC 2018 (&lt;a href=&#34;https://supersec.es/&#34;&gt;https://supersec.es/&lt;/a&gt;): Congress on secure software development, happening in Almería, Spain on the weekend on 12-13 May.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll be presenting on 13th may at 10:50, and the &lt;a href=&#34;../../es/presentations/citellus/supersec2018/&#34;&gt;slide deck&lt;/a&gt;
and I&amp;rsquo;ll be updating this once I get the recording URL.&lt;/p&gt;
&lt;p&gt;Some data about the event:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Conference program and further data can be found at &lt;a href=&#34;https://supersec.es/programa/&#34;&gt;https://supersec.es/programa/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter feed: &lt;a href=&#34;https://twitter.com/SuperSEC_ES&#34;&gt;https://twitter.com/SuperSEC_ES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://photos.google.com/share/AF1QipNI_PqleRD_ImbRhu7sOgfpoOYGLXMUdanNUov7GDktY4-A-o0b_8pEsKnlBnLgZg?key=VEw2bDRDNHJ3QXdYR0NReXZrcWdOa2JjSEdyNWhB&#34;&gt;Shared Pics from attendees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Press coverage:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lavozdealmeria.com/noticia/12/almeria/151767/expertos-en-ciberseguridad-en-la-ual&#34;&gt;https://www.lavozdealmeria.com/noticia/12/almeria/151767/expertos-en-ciberseguridad-en-la-ual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the topics, the main focus was security on software from design phase to production and maintenance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevConf.cz 2018: Citellus - Detecting common pitfalls of deployments</title>
      <link>https://iranzo.io/presentations/citellus/devconfcz-2018/devconfcz2018-presentation-revealmd/</link>
      <pubDate>Sat, 27 Jan 2018 16:00:00 +0100</pubDate>
      <guid>https://iranzo.io/presentations/citellus/devconfcz-2018/devconfcz2018-presentation-revealmd/</guid>
      <description>&lt;h2 id=&#34;citellus&#34;&gt;&lt;a href=&#34;https://github.com/citellusorg/citellus&#34;&gt;Citellus&lt;/a&gt;:&lt;/h2&gt;
&lt;h3 id=&#34;detecting-common-pitfalls-of-deployments&#34;&gt;Detecting common pitfalls of deployments&lt;/h3&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;citellus.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/citellusorg/citellus&#34;&gt;https://github.com/citellusorg/citellus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recording at &lt;a href=&#34;https://www.youtube.com/watch?v=SDzzqrUdn5A&#34;&gt;https://www.youtube.com/watch?v=SDzzqrUdn5A&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-is-citellus&#34;&gt;What is Citellus?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Citellus is a framework populated by community-contributed scripts that automate detecting problems, including configuration issues, conflicts with package versions, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;history-how-did-was-it-started&#34;&gt;History: how did was it started?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The tool, started by Robin Černín after a long weekend shift checking one and over again several sosreports for the same data on different hosts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It started with some tests + shell wrapper, and was added a python wrapper by Pablo Iranzo to bring in more powerful features.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevConf.cz 2018!</title>
      <link>https://iranzo.io/blog/2018/01/27/devconf.cz-2018/</link>
      <pubDate>Sat, 27 Jan 2018 15:00:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2018/01/27/devconf.cz-2018/</guid>
      <description>&lt;h2 id=&#34;presentation-at-devconfcz-2018&#34;&gt;Presentation at DevConf.cz 2018!&lt;/h2&gt;
&lt;p&gt;As highlighted in the prior edition of the &lt;a href=&#34;../../blog/2018/01/16/recent-changes-in-magui-and-citellus/&#34;&gt;&amp;lsquo;What&amp;rsquo;s new&amp;rsquo;&lt;/a&gt;, we got a slot for DevConf.cz 2018.&lt;/p&gt;
&lt;p&gt;During that &lt;a href=&#34;https://devconfcz2018.sched.com/event/DJXG/detect-pitfalls-of-osp-deployments-with-citellus&#34;&gt;slot&lt;/a&gt;, my colleagues Martin, Pablo and myself were presenting on the history and basics of Citellus and how it helps on debugging issues and providing faster analysis of already known ones.&lt;/p&gt;
&lt;p&gt;It is possible to watch the recording at &lt;a href=&#34;https://www.youtube.com/watch?v=SDzzqrUdn5A&#34;&gt;https://www.youtube.com/watch?v=SDzzqrUdn5A&lt;/a&gt; and the slides used at:
&lt;a href=&#34;https://github.com/citellusorg/citellus/blob/master/doc/devconfcz2018-presentation-revealmd.md&#34;&gt;https://github.com/citellusorg/citellus/blob/master/doc/devconfcz2018-presentation-revealmd.md&lt;/a&gt;
&lt;p&gt;
Enjoy! (and if you do, you can
&lt;a href=&#34;https://ko-fi.com/I2I4KDA0V&#34; target=&#34;_blank&#34;&gt;
  &lt;img src=&#34;https://storage.ko-fi.com/cdn/brandasset/kofi_s_logo_nolabel.png&#34; height=&#39;36&#39; style=&#39;border:0px;height:36px;vertical-align:middle;display:inline-block;&#39; border=&#34;0&#34;&gt;
&lt;/img&gt;
Buy Me a Coffee
&lt;/a&gt;
)
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recent changes in Magui and Citellus</title>
      <link>https://iranzo.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/</link>
      <pubDate>Tue, 16 Jan 2018 21:17:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2018/01/16/recent-changes-in-magui-and-citellus/</guid>
      <description>&lt;h2 id=&#34;whats-new&#34;&gt;What&amp;rsquo;s new?&lt;/h2&gt;
&lt;p&gt;During recent weeks we&amp;rsquo;ve been coding and performing several changes to &lt;a href=&#34;../../blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; and &lt;a href=&#34;../../blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./&#34;&gt;Magui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Checking the latest logs or list of issues open and closed on github is probably not an easy task or the best way to get &amp;lsquo;up-to-date&amp;rsquo; with changes, so I&amp;rsquo;ll try to compile a few here.&lt;/p&gt;
&lt;p&gt;First of all, we&amp;rsquo;re going to present it at &lt;a href=&#34;https://devconfcz2018.sched.com/event/DJXG/detect-pitfalls-of-osp-deployments-with-citellus&#34;&gt;DevConf.cz 2018&lt;/a&gt;, so come stop-by if assisting :-)&lt;/p&gt;
&lt;p&gt;Some of the changes include&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>i18n and &#39;bash8&#39; in bash</title>
      <link>https://iranzo.io/blog/2017/10/26/i18n-and-bash8-in-bash/</link>
      <pubDate>Thu, 26 Oct 2017 21:17:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/10/26/i18n-and-bash8-in-bash/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In order to improve &lt;a href=&#34;../../blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; and &lt;a href=&#34;https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./&#34;&gt;Magui&lt;/a&gt;, we did implement some &lt;a href=&#34;../../blog/2017/08/17/jenkins-for-running-ci-tests/&#34;&gt;Unit testing&lt;/a&gt; to improve code quality.&lt;/p&gt;
&lt;p&gt;The tests written were made in python and with some changes it was also possible to validate the actual tests.&lt;/p&gt;
&lt;p&gt;Also, we did prepare the strings in python using gettext library so the actual messages can be translated to the language of choice (defaults to en, but can be changed via &lt;code&gt;--lang&lt;/code&gt; modifier of citellus).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins for running CI tests</title>
      <link>https://iranzo.io/blog/2017/08/17/jenkins-for-running-ci-tests/</link>
      <pubDate>Thu, 17 Aug 2017 23:54:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/08/17/jenkins-for-running-ci-tests/</guid>
      <description>&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;While working on &lt;a href=&#34;https://iranzo.io/blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; and &lt;a href=&#34;https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./&#34;&gt;Magui&lt;/a&gt; it soon became evident that Unit testing for validating the changes was a requirement.&lt;/p&gt;
&lt;p&gt;Initially, using a &lt;code&gt;.travis.yml&lt;/code&gt; file contained in the repo and the free service provided by &lt;a href=&#34;https://travis-ci.org&#34;&gt;https://travis-ci.org&lt;/a&gt; we soon got &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; repo providing information about if the builds succeeded or not.&lt;/p&gt;
&lt;p&gt;When it was decided to move to &lt;a href=&#34;https://gerrithub.io&#34;&gt;https://gerrithub.io&lt;/a&gt; to work in a more similar way to what is being done in upstream, we improved on the code commenting (peer review), but we lost the ability to run the tests in an automated way until the change was merged into github.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Magui for analysis of issues across several hosts.</title>
      <link>https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./</link>
      <pubDate>Mon, 31 Jul 2017 12:45:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/07/31/magui-for-analysis-of-issues-across-several-hosts./</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../../blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./&#34;&gt;Citellus&lt;/a&gt; allows to check a sosreport against known problems identified on the provided tests.&lt;/p&gt;
&lt;p&gt;This approach is easy to implement and easy to test but has limitations when a problem can span across several hosts and only the problem reveals itself when a general analysis is performed.&lt;/p&gt;
&lt;p&gt;Magui tries to solve that by running the analysis functions inside citellus across a set of sosreports, unifying the data obtained per citellus plugin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Citellus: framework for detecting known issues in systems.</title>
      <link>https://iranzo.io/blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./</link>
      <pubDate>Wed, 26 Jul 2017 22:26:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2017/07/26/citellus-framework-for-detecting-known-issues-in-systems./</guid>
      <description>Learn about Citellus, a framework that will help you detect known issues, and more insightful information about your system</description>
    </item>
    <item>
      <title>InfraRed for deploying OpenStack</title>
      <link>https://iranzo.io/blog/2017/02/23/infrared-for-deploying-openstack/</link>
      <pubDate>Thu, 23 Feb 2017 23:27:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2017/02/23/infrared-for-deploying-openstack/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/redhat-openstack/infrared/&#34;&gt;InfraRed&lt;/a&gt; is tool that allows to install/provision OpenStack. You can find the documentation for the project at &lt;a href=&#34;http://infrared.readthedocs.io&#34;&gt;http://infrared.readthedocs.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, developers and users are online in FreeNode at #infrared channel.&lt;/p&gt;
&lt;h2 id=&#34;why-infrared&#34;&gt;Why InfraRed?&lt;/h2&gt;
&lt;p&gt;Deploying OSP with OSP-d (TripleO) requires several setup steps for preparation, deployment, etc. InfraRed simplifies them by automating with ansible most of those steps and configuration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It allows to deploy several OSP versions&lt;/li&gt;
&lt;li&gt;Allows to ease connection to installed vm roles (Ceph, Computes, Controllers, Undercloud)&lt;/li&gt;
&lt;li&gt;Allows to define working environments so one InfraRed-running host can be used to manage different environments&lt;/li&gt;
&lt;li&gt;and much more&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setup-of-infrared-running-host&#34;&gt;Setup of InfraRed-running host&lt;/h2&gt;
&lt;p&gt;Setting InfraRed is quite easy, at the moment the version 2 (branch on github) is working pretty well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Ansible</title>
      <link>https://iranzo.io/blog/2017/02/20/getting-started-with-ansible/</link>
      <pubDate>Mon, 20 Feb 2017 23:10:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2017/02/20/getting-started-with-ansible/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve started to get familiar with &lt;a href=&#34;http://www.ansible.com&#34;&gt;Ansible&lt;/a&gt; because,
apart of getting more and more accepted for OSP-related tasks and
installation, I wanted to automate some tasks we needed to setup some servers
for the OpenStack group I work for.&lt;/p&gt;
&lt;p&gt;First of all, it&amp;rsquo;s recommended to get latest version of ansible (tested on
RHEL7 and Fedora), but in order not to mess with the system python libraries, it&amp;rsquo;s convenient to use python&amp;rsquo;s virtual environments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit testing for stampy</title>
      <link>https://iranzo.io/blog/2016/11/05/unit-testing-for-stampy/</link>
      <pubDate>Sat, 05 Nov 2016 19:39:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2016/11/05/unit-testing-for-stampy/</guid>
      <description>&lt;p&gt;Since my prior post on &lt;a href=&#34;../../blog/2016/07/21/contributing-to-openstack/&#34;&gt;Contributing to OpenStack&lt;/a&gt;, I liked the idea of using some automated tests to validate functionality and specifically, the corner cases that could arise when playing with the code.&lt;/p&gt;
&lt;p&gt;Most of the errors fixed so far on stampy, were related with some pieces of the code not properly handling UTF or some information returned, etc and still it has improved, the idea of ensuring that prior errors were not put back into the code when some other changes were performed, started to arise to be a priority.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contributing to OpenStack</title>
      <link>https://iranzo.io/blog/2016/07/21/contributing-to-openstack/</link>
      <pubDate>Thu, 21 Jul 2016 17:32:47 +0200</pubDate>
      <guid>https://iranzo.io/blog/2016/07/21/contributing-to-openstack/</guid>
      <description>&lt;p&gt;Contributing to an OpenSource project might take some time at the beginning, the good thing with OpenStack is that there are lot of guides on how to start and collaborate.&lt;/p&gt;
&lt;p&gt;What I did is to look for a bug in the project tagged as &lt;a href=&#34;https://bugs.launchpad.net/openstack/&amp;#43;bugs?field.tag=low-hanging-fruit&amp;amp;orderby=status&amp;amp;start=0&#34;&gt;low-hanging-fruit&lt;/a&gt;, this allows to browse a large list of bugs that are classified as &lt;code&gt;easy&lt;/code&gt;, so they are the best place for new starters to get familiar with the workflow.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New blog rendering engine: Pelican</title>
      <link>https://iranzo.io/blog/2016/06/03/new-blog-rendering-engine-pelican/</link>
      <pubDate>Fri, 03 Jun 2016 17:23:47 +0200</pubDate>
      <guid>https://iranzo.io/blog/2016/06/03/new-blog-rendering-engine-pelican/</guid>
      <description>&lt;p&gt;As always, I don&amp;rsquo;t usually find myself keen to write about things I do, until I later realize they might be helpful for others, and that&amp;rsquo;s why in the past I decided to switch the place I was putting the information about why did to Github and also, take benefit of practicing markdown for writing the entries.&lt;/p&gt;
&lt;p&gt;At that time, I moved my old blog posts to markdown to be used in conjunction with Jekyll and to use OctoPress as the engine rendering the contents into a static website. The setup and migration was not difficult, but still require to use some ruby, while I was more familiar with Python.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Filtering email with imapfilter</title>
      <link>https://iranzo.io/blog/2015/08/28/filtering-email-with-imapfilter/</link>
      <pubDate>Fri, 28 Aug 2015 15:27:47 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/08/28/filtering-email-with-imapfilter/</guid>
      <description>&lt;p&gt;Since some time ago, email filter management was not scaling for me as I was using server-side filtering, I had to deal with the web-based interface which was missing some elements like drag&amp;amp;drop reordering of rules, cloning, etc.&lt;/p&gt;
&lt;p&gt;As I was already using offlineimap to sync from the remote mail server to my system into a maildir folder, I had almost all the elements I needed.&lt;/p&gt;
&lt;p&gt;After searching for several options &lt;a href=&#34;https://github.com/lefcha/imapfilter&#34;&gt;imapfilter&lt;/a&gt; seemed to be a perfect fit, so I started with a small set of rules and start integration with my email process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RHEV-M with nested VM for OSP</title>
      <link>https://iranzo.io/blog/2015/07/17/rhev-m-with-nested-vm-for-osp/</link>
      <pubDate>Fri, 17 Jul 2015 18:34:17 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/07/17/rhev-m-with-nested-vm-for-osp/</guid>
      <description>&lt;p&gt;Since some time ago, I&amp;rsquo;ve been mostly dealing with OpenStack, requiring different releases to test for different tests, etc.&lt;/p&gt;
&lt;p&gt;Virtualization, as provided by KVM requires some CPU flags to get accelerated operations, &lt;code&gt;vmx&lt;/code&gt; and &lt;code&gt;svm&lt;/code&gt; depending on your processor architecture, but, of course, this is only provided on bare-metal.&lt;/p&gt;
&lt;p&gt;In order to get more flexibility at the expense of performance, &lt;code&gt;nestedvt&lt;/code&gt; allows to expose those flags to the VM&amp;rsquo;s running at the hypervisor so you can run another level of VM&amp;rsquo;s inside those VM&amp;rsquo;s (this starts to sound like the movie &lt;a href=&#34;http://www.imdb.com/title/tt1375666/&#34;&gt;Inception&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing a Telegram.org bot in Python</title>
      <link>https://iranzo.io/blog/2015/06/26/writing-a-telegram.org-bot-in-python/</link>
      <pubDate>Fri, 26 Jun 2015 17:12:30 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/06/26/writing-a-telegram.org-bot-in-python/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://telegram.org&#34;&gt;Telegram.org&lt;/a&gt; recently announced the support for writing bots for their platform, by providing details at &lt;a href=&#34;https://core.telegram.org/bots&#34;&gt;https://core.telegram.org/bots&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was missing for a long time the ability to get a count on karma like we&amp;rsquo;ve on
IRC servers, so I started with it.&lt;/p&gt;
&lt;p&gt;My first try is published at github repo in &lt;a href=&#34;https://github.com/iranzo/stampython&#34;&gt;https://github.com/iranzo/stampython&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the moment it just uses the polling interface to check the new messages received on the channels the bot is in, and later processes them and send the relevant replies via messages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intel AMT on Linux for remote control/fencing</title>
      <link>https://iranzo.io/blog/2015/05/01/intel-amt-on-linux-for-remote-control/fencing/</link>
      <pubDate>Fri, 01 May 2015 11:35:14 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/05/01/intel-amt-on-linux-for-remote-control/fencing/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Some time ago, and after discussing with a colleague, I had a look on Intel&amp;rsquo;s &lt;a href=&#34;http://en.wikipedia.org/wiki/Intel_Active_Management_Technology&#34;&gt;AMT&lt;/a&gt;, and this week I
did a demo for another colleague as a cheap-replacement for having power fencing capabilities on commodity hardware.&lt;/p&gt;
&lt;p&gt;AMT provides a server-like Out of band management like iLO, iDRAC, RSB etc and it&amp;rsquo;s included in i3 with vPro processors/chipsets of some equipment.&lt;/p&gt;
&lt;p&gt;I did the test on a Lenovo X200/201 system I had as old laptop.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrate SPIP-RSS post feed to HTML</title>
      <link>https://iranzo.io/blog/2015/04/01/migrate-spip-rss-post-feed-to-html/</link>
      <pubDate>Wed, 01 Apr 2015 16:49:13 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/04/01/migrate-spip-rss-post-feed-to-html/</guid>
      <description>&lt;p&gt;I had my old blog based on &lt;a href=&#34;http://www.spip.net&#34;&gt;SPIP&lt;/a&gt;, and I wanted to keep all the posts together, to make it easier to migrate in the future.&lt;/p&gt;
&lt;p&gt;Initially, I migrated my posts from blogger, where there&amp;rsquo;s an option to export the contents and some plugins to allow easier importing to markdown files (to be used by OctoPress), those were the recent posts, so part of the job was already done there.&lt;/p&gt;
&lt;p&gt;Next step, was to migrate old posts on my SPIP site.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install RHEL7/Centos/Fedora on a software raid device</title>
      <link>https://iranzo.io/blog/2015/03/28/install-rhel7/centos/fedora-on-a-software-raid-device/</link>
      <pubDate>Sat, 28 Mar 2015 18:46:42 +0100</pubDate>
      <guid>https://iranzo.io/blog/2015/03/28/install-rhel7/centos/fedora-on-a-software-raid-device/</guid>
      <description>&lt;p&gt;Installing Linux on a RAID has lot of advantages, from using RAID1 to enjoy protection against drive failures or RAID0 to combine the size of several drives to create bigger space for files with all the smaller disks we have.&lt;/p&gt;
&lt;p&gt;There are several &lt;a href=&#34;http://en.wikipedia.org/wiki/RAID&#34;&gt;RAID&lt;/a&gt; level definitions and may have different uses depending on our needs and hardware availability.&lt;/p&gt;
&lt;p&gt;For this, I focused on using raid1 for the system disks (for greater redundancy/protection against failures) and raid0 (for combining several disks to make bigger space available for non important data)..&lt;/p&gt;</description>
    </item>
    <item>
      <title>OctoPress for Jekyll blogging</title>
      <link>https://iranzo.io/blog/2015/03/24/octopress-for-jekyll-blogging/</link>
      <pubDate>Tue, 24 Mar 2015 13:23:15 +0100</pubDate>
      <guid>https://iranzo.io/blog/2015/03/24/octopress-for-jekyll-blogging/</guid>
      <description>&lt;p&gt;After testing for some days Jekyll and github.io for blog posting, I was missing some features of other CMS, so I started doing some search on how to automate many other topics while keeping simplicity on blog posting.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://octopress.org&#34;&gt;OctoPress&lt;/a&gt; Makes this extra step so you can still focus on your contents and of course have a nice template as starting point with integrations for some social plugins, etc.&lt;/p&gt;
&lt;p&gt;Setup is well done if you follow the provided steps, without jumping anything, in my case, I moved my old pages (plain &lt;code&gt;jekyll + poole&lt;/code&gt;) to OctoPress.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Podcasts with flexget and transmission</title>
      <link>https://iranzo.io/blog/2015/03/16/podcasts-with-flexget-and-transmission/</link>
      <pubDate>Mon, 16 Mar 2015 21:45:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2015/03/16/podcasts-with-flexget-and-transmission/</guid>
      <description>&lt;p&gt;Some podcasts are available via RSS feeds, so you can get notified of new episodes, so the best way I&amp;rsquo;ve found so far to automate this procedure is to use the utility &lt;code&gt;flexget&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Flexget can download a RSS feed and get the &lt;code&gt;.torrent&lt;/code&gt; files associated to them and store locally, which makes a perfect fit for later using Transmission&amp;rsquo;s &lt;code&gt;watch&lt;/code&gt; folder, to automatically add them to your download queue.&lt;/p&gt;
&lt;p&gt;In order to do so, install &lt;code&gt;flexget&lt;/code&gt; either via pip (&lt;code&gt;pip install flexget&lt;/code&gt;) or using a package for your distribution and create a configuration file similar to this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jekyll and Markdown</title>
      <link>https://iranzo.io/blog/2015/03/16/jekyll-and-markdown/</link>
      <pubDate>Mon, 16 Mar 2015 09:06:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2015/03/16/jekyll-and-markdown/</guid>
      <description>&lt;p&gt;For my work I&amp;rsquo;ve been using markdown for a while, it allows to use some formatting on the documents created (mainly for knowledge base and solutions) without too much hassle for the formatting.&lt;/p&gt;
&lt;p&gt;On the other side I was willing to improve the ability to make it easier to post new entries to blog without having to wait too much time, and of course, be able to prepare them offline and then push them live.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RHEV/oVirt API with Python</title>
      <link>https://iranzo.io/blog/2012/10/24/rhev/ovirt-api-with-python/</link>
      <pubDate>Wed, 24 Oct 2012 13:38:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2012/10/24/rhev/ovirt-api-with-python/</guid>
      <description>&lt;p&gt;&lt;code&gt;RHEV&lt;/code&gt;/&lt;code&gt;oVirt&lt;/code&gt; API allows faster and simple development of scripts and utilities ranging from gathering of information to VM/host, etc manipulation.&lt;/p&gt;
&lt;p&gt;For example, a simple script for connecting to API and list VM&amp;rsquo;s could be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; getopt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; optparse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; ovirtsdk.api &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; API
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; ovirtsdk.xml &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; params
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; random &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; choice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baseurl &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://localhost:8443&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;api &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; API(url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;baseurl, username&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin@internal&amp;#34;&lt;/span&gt;, password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;redhat&amp;#34;&lt;/span&gt;, insecure&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; vm &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; api&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vms&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;.list()&lt;/code&gt; method works pretty well, but beware, it limits collections to 100 elements for performance reasons, so in those cases, we&amp;rsquo;ll need to check how many results do we have, and paginate by passing an extra argument to our &amp;ldquo;.list()&amp;rdquo; invocation, for example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>duplicity for managing backups</title>
      <link>https://iranzo.io/blog/2011/06/27/duplicity-for-managing-backups/</link>
      <pubDate>Mon, 27 Jun 2011 16:35:00 +0000</pubDate>
      <guid>https://iranzo.io/blog/2011/06/27/duplicity-for-managing-backups/</guid>
      <description>&lt;p&gt;A few days ago, I was checking a friend&amp;rsquo;s system for backing up.&lt;/p&gt;
&lt;p&gt;It was based on &lt;code&gt;rsync&lt;/code&gt; at the Linux side and &lt;code&gt;rsync&lt;/code&gt; server on a windows machine he uses for storing information generated by other software.&lt;/p&gt;
&lt;p&gt;The solution with &lt;code&gt;rsync&lt;/code&gt; worked pretty well for him until he started to put several strange characters in filenames which rendered the backup unusable to certain point.&lt;/p&gt;
&lt;p&gt;After being asked for alternative backup software that was available on several platforms, I&amp;rsquo;ve ended testing duplicity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firsts steps with Fedora 15 pre-alpha</title>
      <link>https://iranzo.io/blog/2011/03/07/firsts-steps-with-fedora-15-pre-alpha/</link>
      <pubDate>Mon, 07 Mar 2011 17:26:00 +0100</pubDate>
      <guid>https://iranzo.io/blog/2011/03/07/firsts-steps-with-fedora-15-pre-alpha/</guid>
      <description>&lt;p&gt;Today I&amp;rsquo;ve decided to give it a try to F15-prealpha (expected to release tomorrow).&lt;/p&gt;
&lt;p&gt;The upgrade performed in the unsupported way (getting and forcing install for newer fedora-release from a mirror then start issuing several yum upgrades) when reasonably good.&lt;/p&gt;
&lt;p&gt;Only some minor dependency problems &lt;code&gt;et voilà&lt;/code&gt;, system started fine.&lt;/p&gt;
&lt;p&gt;Problems so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox 4 has a few approved extensions, I used the &amp;ldquo;nightly tester tools&amp;rdquo; to disable version check and enable most of the ones I had with 3.6.x without problems.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t like gnome-shell at the moment&lt;/li&gt;
&lt;li&gt;Desktop icons disappeared&amp;hellip;&lt;/li&gt;
&lt;li&gt;Menu bar is black and found no way to configure it yet&lt;/li&gt;
&lt;li&gt;Gnome-applets have some dependency problems and can&amp;rsquo;t install or configure them, furthermore I lost my tray area on one of the computers but works fine on the other.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope that tomorrow&amp;rsquo;s release of Alpha will fix some of them in order to warm-up for final launch (&lt;a href=&#34;http://fedoraproject.org/wiki/Releases/15/Schedule&#34;&gt;http://fedoraproject.org/wiki/Releases/15/Schedule&lt;/a&gt;)&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Customize RHEL/CentOS installation media (EL4/EL5&#43;)</title>
      <link>https://iranzo.io/blog/2010/01/23/customize-rhel/centos-installation-media-el4/el5-/</link>
      <pubDate>Sat, 23 Jan 2010 08:25:00 +0000</pubDate>
      <guid>https://iranzo.io/blog/2010/01/23/customize-rhel/centos-installation-media-el4/el5-/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A standard install media, (let&amp;rsquo;s talk about a DVD for easier start) has several files/folders at his root, but most important are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;isolinux&lt;/code&gt; (where the loader lives)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;images&lt;/code&gt; (for extra files for installer to load)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Packages&lt;/code&gt; for installation (&lt;code&gt;RedHat/&lt;/code&gt; for EL4, &lt;code&gt;Server&lt;/code&gt;/&lt;code&gt;Client&lt;/code&gt; for EL5)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Usually, a distribution has, for its main binaries, more than 2 gigabytes of data, that enables one target to act as a multifunction server/workstation, but that you will not usually load on the same system. Furthermore, since the DVD creation, there have been so many updates/patches that make your installation a &amp;lsquo;outdated&amp;rsquo; install that you&amp;rsquo;ll need to upgrade to have recent patches.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MiniDLNA SPEC &amp; RPM</title>
      <link>https://iranzo.io/blog/2009/07/10/minidlna-spec-rpm/</link>
      <pubDate>Fri, 10 Jul 2009 08:54:35 +0000</pubDate>
      <guid>https://iranzo.io/blog/2009/07/10/minidlna-spec-rpm/</guid>
      <description>&lt;p&gt;MiniDLNA provides an OpenSource DLNA server software that can index and present specific folders on your computer to DLNA clients on your network.&lt;/p&gt;
&lt;p&gt;Project at sourceforge is distributed as CVS code that you need to checkout and compile for it to work on your computer.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve setup a spec file that will allow you to create an rpm that has been tested on Red Hat Enterprise Linux 5.3 machine x86 for easing adoption among users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mount disk images</title>
      <link>https://iranzo.io/blog/2008/07/18/mount-disk-images/</link>
      <pubDate>Fri, 18 Jul 2008 06:17:02 +0000</pubDate>
      <guid>https://iranzo.io/blog/2008/07/18/mount-disk-images/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using a Xen guest under RHEL 5.2 to hold this Webserver, and because of failures, I choose to keep a copy of the full disk image on another machine.&lt;/p&gt;
&lt;p&gt;Having to transfer the full disk in the network means stop the server (Xen guest),
&lt;code&gt;rsync&lt;/code&gt; the image on disk (wait 40 minutes), then start guest again.&lt;/p&gt;
&lt;p&gt;After doing the initial image transfer, it would be easier to just sync updated files, but&amp;hellip; how to loop mount a full disk?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logical volume manager (LVM)</title>
      <link>https://iranzo.io/blog/2008/04/20/logical-volume-manager-lvm/</link>
      <pubDate>Sun, 20 Apr 2008 23:03:52 +0000</pubDate>
      <guid>https://iranzo.io/blog/2008/04/20/logical-volume-manager-lvm/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;LVM are the initials for Logical Volume Manager, a powerful tool present in actual Linux systems inspired in the implementation available in other systems like AIX and HP-UX.&lt;/p&gt;
&lt;p&gt;LVM introduces a separation between system structure and elements like disks, partitions, filesystems to which we are used to.&lt;/p&gt;
&lt;p&gt;LVM has three levels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Physical volumes&lt;/li&gt;
&lt;li&gt;Volume Groups&lt;/li&gt;
&lt;li&gt;Logical volumes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the benefits of LVM over traditional systems is that LVM introduces an abstraction layer which improves the limitation of a disk, allowing us to have a filesystem to span over several disks, resizing thus making a more efficient usage of storage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Security Enhanced Linux (SELinux)</title>
      <link>https://iranzo.io/blog/2008/01/04/security-enhanced-linux-selinux/</link>
      <pubDate>Fri, 04 Jan 2008 18:14:03 +0000</pubDate>
      <guid>https://iranzo.io/blog/2008/01/04/security-enhanced-linux-selinux/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;SELinux is an implementation of MAC (Mandatory Access Controls) over LSM (Linux Security Modules) in Linux Kernel.&lt;/p&gt;
&lt;p&gt;SELinux, originally developed by N.S.A. (National Security Agency) allows applications to be confined by the kernel.&lt;/p&gt;
&lt;p&gt;Inside that &amp;ldquo;confined area&amp;rdquo;, much more grained than a standard &lt;code&gt;chroot&lt;/code&gt; (system where basic executables are copied to another folder in order to have a small subsystem isolated from real system. The drawback is that a small subsystem could have enough utilities to reveal private information from our internal network),in which we can allow only certain operations, for example: adding information to a file, read from a directory but not writing, even just for one file in a standard directory,
etc&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating Jigsaw Download (JigDo) files for downloading ISO&#39;s</title>
      <link>https://iranzo.io/blog/2007/11/15/creating-jigsaw-download-jigdo-files-for-downloading-isos/</link>
      <pubDate>Thu, 15 Nov 2007 21:50:25 +0000</pubDate>
      <guid>https://iranzo.io/blog/2007/11/15/creating-jigsaw-download-jigdo-files-for-downloading-isos/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;JigDo (&lt;code&gt;JIGsaw DOwnload&lt;/code&gt;) is a small utility that can assemble a CD/DVD image from it&amp;rsquo;s internal files.&lt;/p&gt;
&lt;p&gt;For example, &lt;a href=&#34;http://www.debian.org/&#34;&gt;Debian&lt;/a&gt; has been using it for years for distributing the entire distribution: you downloaded a
&lt;code&gt;.jigdo&lt;/code&gt; file, and then, using the utility &lt;code&gt;jigdo-lite&lt;/code&gt; (package
&lt;code&gt;jigdo-file&lt;/code&gt; on Debian like and RPM based&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. This way, you only downloaded small files from servers, preventing line failures, spreading load between several servers, etc.&lt;/p&gt;
&lt;p&gt;Furthermore, if you already had some files (for example if you started at version X and have been downloading and keeping
all files until X.Y,
&lt;code&gt;jigdo&lt;/code&gt;, can use those updated files to compare them against the &lt;code&gt;.jigdo&lt;/code&gt; file and avoid downloading duplicated files&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSH, stunnel and a proxy - double stunnel bypass</title>
      <link>https://iranzo.io/blog/2006/11/01/ssh-stunnel-and-a-proxy-double-stunnel-bypass/</link>
      <pubDate>Wed, 01 Nov 2006 17:47:00 +0000</pubDate>
      <guid>https://iranzo.io/blog/2006/11/01/ssh-stunnel-and-a-proxy-double-stunnel-bypass/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;m working for a &amp;ldquo;very concerned about security&amp;rdquo; firm, that makes mandatory using VPN for accessing their network, and internal services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IMAPS&lt;/li&gt;
&lt;li&gt;SMTP&lt;/li&gt;
&lt;li&gt;Intranet&lt;/li&gt;
&lt;li&gt;Forums&lt;/li&gt;
&lt;li&gt;Online training, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As it should, we provided services for a client, also very concerned about security, thus not allowing internet access despite of using two squid proxies with a network appliance filtering protocols, scripts, viruses and malware. They only allow FTP, HTTP and HTTPS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OCS Deployment Tips and tricks</title>
      <link>https://iranzo.io/blog/2006/07/29/ocs-deployment-tips-and-tricks/</link>
      <pubDate>Sat, 29 Jul 2006 20:13:00 +0000</pubDate>
      <guid>https://iranzo.io/blog/2006/07/29/ocs-deployment-tips-and-tricks/</guid>
      <description>&lt;p&gt;Prior to using the following info for creating own-made packages, let&amp;rsquo;s test if everything is working fine.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve created a NSIS script that writes into registry in a key called &lt;code&gt;HKLMSOFTWAREOCS&lt;/code&gt; and puts a key named &amp;ldquo;cert&amp;rdquo; with value &lt;code&gt;creilla&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If we create a package with action &amp;ldquo;LAUNCH&amp;rdquo;, and attach the &lt;code&gt;regcert.zip&lt;/code&gt; with command to execute &lt;code&gt;regcert.exe&lt;/code&gt;, all clients with functional package deployment, will add that key to registry, so we can check, using OCS registry query function for a key named &amp;ldquo;cert&amp;rdquo; into: &lt;code&gt;HKLM&lt;/code&gt; &lt;code&gt;SOFTWAREOCS&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OCS Inventory Package deployment</title>
      <link>https://iranzo.io/blog/2006/07/27/ocs-inventory-package-deployment/</link>
      <pubDate>Thu, 27 Jul 2006 20:29:00 +0200</pubDate>
      <guid>https://iranzo.io/blog/2006/07/27/ocs-inventory-package-deployment/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;OCS Inventory is an excellent piece of GPL Software for getting info from hardware components, and software installed on computers running Windows or UNIX-like operating systems (there are also some unofficial clients for running on other platforms).&lt;/p&gt;
&lt;p&gt;Since New Generation (&lt;code&gt;OCS-NG&lt;/code&gt;), a new architecture was implemented: server were contacted using standard TCP/IP connection (Previous versions, used an MDB file to store information, and required a SMB share to inventory computers ), allowing remote computers to connect as well as providing a new web interface for computer administration, and inventory query.&lt;/p&gt;</description>
    </item>
    <item>
      <title>VPNS - Multiple VPN&#39;s Launcher</title>
      <link>https://iranzo.io/blog/2003/03/05/vpns-multiple-vpns-launcher/</link>
      <pubDate>Wed, 05 Mar 2003 20:55:00 +0000</pubDate>
      <guid>https://iranzo.io/blog/2003/03/05/vpns-multiple-vpns-launcher/</guid>
      <description>&lt;h2 id=&#34;general-purpose&#34;&gt;General Purpose&lt;/h2&gt;
&lt;p&gt;The idea on writing VPNS and the structure it follows was the problem that
we had into easily configure many VPN&amp;rsquo;s for use with the wireless project
interconnection (Valencia Wireless
&lt;a href=&#34;http://www.valenciawireless.org/&#34;&gt;&lt;code&gt;http://www.valenciawireless.org&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;When having no chance to join networks using just wireless links, we needed
to provide some kind of transparent link from one WiFi node to another. To
do so, we decided to use the vpnd daemon to establish links between our
networks for allowing transparent traffic flow.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
